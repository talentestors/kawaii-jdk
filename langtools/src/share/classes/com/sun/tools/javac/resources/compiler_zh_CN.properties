#
# Copyright (c) 1999, 2017, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# Messages in this file which use "placeholders" for values (e.g. {0}, {1})
# are preceded by a stylized comment describing the type of the corresponding
# values.
# The types currently in use are
#
# boolean           true or false
# file name         the name of an input file; e.g.   MyFile.java
# message segment   a sub-message; see compiler.misc.*
# modifier          a Java modifier; e.g. public, private, protected
# name              a name, typically a Java identifier
# number            an integer
# option name       the name of a command line option
# source version    a source version number, such as 1.5, 1.6, 1.7
# string            a general string
# symbol            the name of a declared type
# symbol kind       a description of the kind of a declaration; see compiler.misc.kindname.*
# token             the name of a non-terminal in source code; see compiler.misc.token.*
# type              a Java type; e.g. int, X, X<T>
# unused            the value is not used in this message
#
# list of X         a comma-separated list of items; e.g. list of type
# X or Y            alternation; e.g. message segment or type
# set of X          a comma-separated collection of items; e.g. set of modifier
#
# These may be composed: e.g.   list of type or message segment
#
# These comments are verified by the jtreg test test/tools/javac/diags/MessageInfo,
# using info derived from the collected set of examples in test/tools/javac/diags/examples.
# MessageInfo can also be run as a standalone utility providing more facilities
# for manipulating this file. For more details, see MessageInfo.java.

##
## errors
##

# 0: symbol
compiler.err.abstract.cant.be.instantiated={0}\u662f\u62bd\u8c61\u7684; \u65e0\u6cd5\u5b9e\u4f8b\u5316

compiler.err.abstract.meth.cant.have.body=\u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u6709\u4e3b\u4f53

compiler.err.already.annotated={0} {1}\u5df2\u8fdb\u884c\u6ce8\u91ca

# 0: symbol kind, 1: symbol, 2: symbol kind, 3: symbol
compiler.err.already.defined=\u5df2\u5728{2} {3}\u4e2d\u5b9a\u4e49\u4e86{0} {1}

# 0: symbol kind, 1: symbol, 2: symbol kind, 3: symbol kind, 4: symbol
compiler.err.already.defined.in.clinit=\u5df2\u5728{3} {4}\u7684{2}\u4e2d\u5b9a\u4e49\u4e86{0} {1}

# 0: string
compiler.err.already.defined.single.import={0}\u7684 single-type-import \u5df2\u5b9a\u4e49\u5177\u6709\u76f8\u540c\u7b80\u540d\u7684\u7c7b\u578b

# 0: string
compiler.err.already.defined.static.single.import={0}\u7684\u9759\u6001 single-type-import \u5df2\u5b9a\u4e49\u5177\u6709\u76f8\u540c\u7b80\u540d\u7684\u7c7b\u578b

compiler.err.already.defined.this.unit=\u5df2\u5728\u8be5\u7f16\u8bd1\u5355\u5143\u4e2d\u5b9a\u4e49{0}

# 0: type, 1: list of name
compiler.err.annotation.missing.default.value=\u5bf9\u4e8e\u5143\u7d20 ''{1}'', \u6ce8\u91ca @{0} \u7f3a\u5c11\u9ed8\u8ba4\u503c

# 0: type, 1: list of name
compiler.err.annotation.missing.default.value.1=\u5bf9\u4e8e\u5143\u7d20{1}, \u6ce8\u91ca @{0} \u7f3a\u5c11\u9ed8\u8ba4\u503c

# 0: type
compiler.err.annotation.not.valid.for.type=\u6ce8\u91ca\u5bf9\u4e8e\u7c7b\u578b{0}\u7684\u5143\u7d20\u65e0\u6548

compiler.err.annotation.type.not.applicable=\u6ce8\u91ca\u7c7b\u578b\u4e0d\u9002\u7528\u4e8e\u8be5\u7c7b\u578b\u7684\u58f0\u660e

compiler.err.annotation.value.must.be.annotation=\u6ce8\u91ca\u503c\u5fc5\u987b\u4e3a\u6ce8\u91ca

compiler.err.annotation.value.must.be.class.literal=\u6ce8\u91ca\u503c\u5fc5\u987b\u4e3a\u7c7b\u6587\u5b57

compiler.err.annotation.value.must.be.name.value=\u6ce8\u91ca\u503c\u5fc5\u987b\u91c7\u7528 ''name=value'' \u683c\u5f0f

compiler.err.annotation.value.not.allowable.type=\u6ce8\u91ca\u503c\u4e0d\u662f\u5141\u8bb8\u7684\u7c7b\u578b

compiler.err.anon.class.impl.intf.no.args=\u533f\u540d\u7c7b\u5b9e\u73b0\u63a5\u53e3; \u4e0d\u80fd\u6709\u53c2\u6570

compiler.err.anon.class.impl.intf.no.typeargs=\u533f\u540d\u7c7b\u5b9e\u73b0\u63a5\u53e3; \u4e0d\u80fd\u5177\u6709\u7c7b\u578b\u53c2\u6570

compiler.err.anon.class.impl.intf.no.qual.for.new=\u533f\u540d\u7c7b\u5b9e\u73b0\u63a5\u53e3; \u4e0d\u80fd\u6709\u9650\u5b9a\u7b26 - \u5bf9\u4e8e\u65b0

compiler.err.cant.inherit.from.anon=\u65e0\u6cd5\u4ece\u533f\u540d\u7c7b\u7ee7\u627f

# 0: symbol, 1: symbol, 2: symbol
compiler.err.array.and.varargs=\u65e0\u6cd5\u5728{2}\u4e2d\u540c\u65f6\u58f0\u660e{0}\u548c{1}

compiler.err.array.dimension.missing=\u7f3a\u5c11\u6570\u7ec4\u7ef4

# 0: type
compiler.err.array.req.but.found=\u9700\u8981\u6570\u7ec4, \u4f46\u627e\u5230{0}

compiler.err.attribute.value.must.be.constant=\u5143\u7d20\u503c\u5fc5\u987b\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f

# 0: statement type
compiler.err.bad.initializer={0}\u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u9519\u8bef

compiler.err.break.outside.switch.loop=\u5728 switch \u6216 loop \u5916\u90e8\u4e2d\u65ad

# 0: name
compiler.err.call.must.be.first.stmt.in.ctor=\u5bf9{0}\u7684\u8c03\u7528\u5fc5\u987b\u662f\u6784\u9020\u5668\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5

# 0: symbol kind, 1: name, 2: list of type or message segment, 3: list of type or message segment, 4: symbol kind, 5: type, 6: message segment
compiler.err.cant.apply.symbol=\u65e0\u6cd5\u5c06{4} {5}\u4e2d\u7684{0} {1}\u5e94\u7528\u5230\u7ed9\u5b9a\u7c7b\u578b;\n\u9700\u8981: {2}\n\u627e\u5230: {3}\n\u539f\u56e0: {6}

# 0: symbol kind, 1: name, 2: list of type
compiler.err.cant.apply.symbols=\u5bf9\u4e8e{1}({2}), \u627e\u4e0d\u5230\u5408\u9002\u7684{0}

# 0: symbol kind, 1: name, 2: list of type or message segment, 3: list of type or message segment, 4: symbol kind, 5: type, 6: message segment
compiler.misc.cant.apply.symbol=\u65e0\u6cd5\u5c06 {4} {5}\u4e2d\u7684 {0} {1}\u5e94\u7528\u5230\u7ed9\u5b9a\u7c7b\u578b\n\u9700\u8981: {2}\n\u627e\u5230: {3}\n\u539f\u56e0: {6}

# 0: symbol kind, 1: name, 2: list of type
compiler.misc.cant.apply.symbols=\u5bf9\u4e8e{1}({2}), \u627e\u4e0d\u5230\u5408\u9002\u7684{0}

# 0: symbol kind, 1: symbol
compiler.misc.no.abstracts=\u5728 {0} {1} \u4e2d\u627e\u4e0d\u5230\u62bd\u8c61\u65b9\u6cd5

# 0: symbol kind, 1: symbol
compiler.misc.incompatible.abstracts=\u5728 {0} {1} \u4e2d\u627e\u5230\u591a\u4e2a\u975e\u8986\u76d6\u62bd\u8c61\u65b9\u6cd5

compiler.err.bad.functional.intf.anno=\u610f\u5916\u7684 @FunctionalInterface \u6ce8\u91ca

# 0: message segment
compiler.err.bad.functional.intf.anno.1=\u610f\u5916\u7684 @FunctionalInterface \u6ce8\u91ca\n{0}

# 0: symbol
compiler.misc.not.a.functional.intf={0} \u4e0d\u662f\u51fd\u6570\u63a5\u53e3\uff0c\u8fd9\u91cc\u4e0d\u53ef\u4ee5\u54e6~

# 0: symbol, 1: message segment
compiler.misc.not.a.functional.intf.1={0} \u4e0d\u662f\u51fd\u6570\u63a5\u53e3\uff0c\u8fd9\u91cc\u4e0d\u53ef\u4ee5\u54e6~\n{1}

# 0: symbol, 1: symbol kind, 2: symbol
compiler.misc.invalid.generic.lambda.target=lambda \u8868\u8fbe\u5f0f\u7684\u51fd\u6570\u63cf\u8ff0\u7b26\u65e0\u6548\n{1} {2} \u4e2d\u7684\u65b9\u6cd5 {0} \u4e3a\u6cdb\u578b\u65b9\u6cd5

# 0: symbol kind, 1: symbol
compiler.misc.incompatible.descs.in.functional.intf=\u5728 {0} {1} \u4e2d\u627e\u5230\u4e0d\u517c\u5bb9\u7684\u51fd\u6570\u63cf\u8ff0\u7b26

# 0: name, 1: list of type, 2: type, 3: list of type
compiler.misc.descriptor=\u63cf\u8ff0\u7b26: {2} {0}({1})

# 0: name, 1: list of type, 2: type, 3: list of type
compiler.misc.descriptor.throws=\u63cf\u8ff0\u7b26: {2} {0}({1}) \u629b\u51fa{3}

# 0: type
compiler.misc.no.suitable.functional.intf.inst=\u65e0\u6cd5\u63a8\u65ad{0}\u7684\u51fd\u6570\u63a5\u53e3\u63cf\u8ff0\u7b26

# 0: message segment
compiler.misc.bad.intersection.target.for.functional.expr=lambda \u6216\u65b9\u6cd5\u5f15\u7528\u7684\u4ea4\u53c9\u7c7b\u578b\u76ee\u6807\u9519\u8bef\n{0}

# 0: symbol or type
compiler.misc.not.an.intf.component=\u7ec4\u4ef6\u7c7b\u578b{0}\u4e0d\u662f\u63a5\u53e3

# 0: symbol kind, 1: message segment
compiler.err.invalid.mref={0}\u5f15\u7528\u65e0\u6548\n{1}

# 0: symbol kind, 1: message segment
compiler.misc.invalid.mref={0}\u5f15\u7528\u65e0\u6548\n{1}

compiler.misc.static.mref.with.targs=\u6709\u5173\u9759\u6001\u65b9\u6cd5\u5f15\u7528\u7684\u53c2\u6570\u5316\u9650\u5b9a\u7b26

compiler.misc.static.bound.mref=\u9759\u6001\u9650\u5236\u8303\u56f4\u65b9\u6cd5\u5f15\u7528

# 0: symbol
compiler.err.cant.assign.val.to.final.var=\u65e0\u6cd5\u4e3a\u6700\u7ec8\u53d8\u91cf{0}\u5206\u914d\u503c

# 0: symbol, 1: message segment
compiler.err.cant.ref.non.effectively.final.var=\u4ece{1}\u5f15\u7528\u7684\u672c\u5730\u53d8\u91cf\u5fc5\u987b\u662f\u6700\u7ec8\u53d8\u91cf\u6216\u5b9e\u9645\u4e0a\u7684\u6700\u7ec8\u53d8\u91cf


compiler.misc.lambda=lambda \u8868\u8fbe\u5f0f

compiler.misc.inner.cls=\u5185\u90e8\u7c7b

# 0: type
compiler.err.cant.deref=\u65e0\u6cd5\u53d6\u6d88\u5f15\u7528{0}

compiler.err.cant.extend.intf.annotation=\u5bf9\u4e8e @interfaces, \u4e0d\u5141\u8bb8 ''extends''

# 0: symbol
compiler.err.cant.inherit.from.final=\u65e0\u6cd5\u4ece\u6700\u7ec8{0}\u8fdb\u884c\u7ee7\u627f

# 0: symbol
compiler.err.cant.ref.before.ctor.called=\u65e0\u6cd5\u5728\u8c03\u7528\u8d85\u7c7b\u578b\u6784\u9020\u5668\u4e4b\u524d\u5f15\u7528{0}

compiler.err.cant.select.static.class.from.param.type=\u65e0\u6cd5\u4ece\u53c2\u6570\u5316\u7684\u7c7b\u578b\u4e2d\u9009\u62e9\u9759\u6001\u7c7b

# 0: symbol, 1: string, 2: string
compiler.err.cant.inherit.diff.arg=\u65e0\u6cd5\u4f7f\u7528\u4ee5\u4e0b\u4e0d\u540c\u7684\u53c2\u6570\u7ee7\u627f{0}: <{1}> \u548c <{2}>

compiler.err.catch.without.try=\u6709 ''catch'', \u4f46\u662f\u6ca1\u6709 ''try''

# 0: symbol kind, 1: symbol
compiler.err.clash.with.pkg.of.same.name={0} {1}\u4e0e\u5e26\u6709\u76f8\u540c\u540d\u79f0\u7684\u7a0b\u5e8f\u5305\u51b2\u7a81

compiler.err.class.not.allowed=\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528\u7c7b, \u63a5\u53e3\u6216\u679a\u4e3e\u58f0\u660e

compiler.err.const.expr.req=\u9700\u8981\u5e38\u91cf\u8868\u8fbe\u5f0f

compiler.err.cont.outside.loop=continue \u5230\u5916\u9762\u53bb\u4e86\uff01

# 0: symbol
compiler.err.cyclic.inheritance=\u6d89\u53ca{0}\u7684\u5faa\u73af\u7ee7\u627f

# 0: symbol
compiler.err.cyclic.annotation.element=\u5143\u7d20 {0} \u7684\u7c7b\u578b\u4e3a\u5faa\u73af

# 0: unused
compiler.err.call.to.super.not.allowed.in.enum.ctor=\u5728\u679a\u4e3e\u6784\u9020\u5668\u4e2d\u4e0d\u5141\u8bb8\u8c03\u7528\u8d85\u7c7b

# 0: type
compiler.err.no.superclass={0}\u4e0d\u5177\u6709\u8d85\u7c7b\u3002

# 0: symbol, 1: type, 2: symbol, 3: type, 4: unused
compiler.err.concrete.inheritance.conflict={1}\u4e2d\u7684\u65b9\u6cd5{0}\u548c{3}\u4e2d\u7684\u65b9\u6cd5{2}\u662f\u4f7f\u7528\u76f8\u540c\u7684\u7b7e\u540d\u7ee7\u627f\u7684

compiler.err.default.allowed.in.intf.annotation.member=\u6ce8\u91ca\u7c7b\u578b\u58f0\u660e\u4e2d\u4ec5\u5141\u8bb8\u9ed8\u8ba4\u503c

# 0: symbol
compiler.err.doesnt.exist=\u7a0b\u5e8f\u5305{0}\u4e0d\u5b58\u5728

# 0: type
compiler.err.duplicate.annotation.invalid.repeated=\u6ce8\u91ca{0}\u4e0d\u662f\u6709\u6548\u7684\u53ef\u91cd\u590d\u6ce8\u91ca

# 0: name, 1: type
compiler.err.duplicate.annotation.member.value=\u6ce8\u91ca@{1}\u4e2d\u7684\u5143\u7d20 ''{0}'' \u91cd\u590d\u3002

# 0: name, 1: unused
compiler.err.duplicate.annotation.missing.container={0} \u4e0d\u662f\u53ef\u91cd\u590d\u7684\u6ce8\u91ca\u7c7b\u578b

# 0: type, 1: unused
compiler.err.invalid.repeatable.annotation=\u6ce8\u91ca\u91cd\u590d: \u4f7f\u7528\u65e0\u6548\u7684 @Repeatable \u6ce8\u91ca\u5bf9{0}\u8fdb\u884c\u4e86\u6ce8\u91ca

# 0: symbol or type
compiler.err.invalid.repeatable.annotation.no.value={0}\u4e0d\u662f\u6709\u6548\u7684 @Repeatable, \u672a\u58f0\u660e\u4efb\u4f55\u503c\u5143\u7d20\u65b9\u6cd5

# 0: type, 1: number
compiler.err.invalid.repeatable.annotation.multiple.values={0}\u4e0d\u662f\u6709\u6548\u7684 @Repeatable, \u5df2\u58f0\u660e {1} \u4e2a\u540d\u4e3a ''value'' \u7684\u5143\u7d20\u65b9\u6cd5

# 0: type
compiler.err.invalid.repeatable.annotation.invalid.value={0}\u4e0d\u662f\u6709\u6548\u7684 @Repeatable: \u503c\u5143\u7d20\u65e0\u6548

# 0: symbol type, 1: unused, 2: type
compiler.err.invalid.repeatable.annotation.value.return=\u5305\u542b\u6ce8\u91ca\u7c7b\u578b ({0}) \u5fc5\u987b\u58f0\u660e\u7c7b\u578b{2}\u7684\u540d\u4e3a ''value'' \u7684\u5143\u7d20

# 0: symbol or type, 1: symbol
compiler.err.invalid.repeatable.annotation.elem.nondefault=\u5bf9\u4e8e\u5143\u7d20 {1}, \u5305\u542b\u6ce8\u91ca\u7c7b\u578b ({0}) \u6ca1\u6709\u9ed8\u8ba4\u503c

# 0: symbol, 1: unused, 2: symbol, 3: unused
compiler.err.invalid.repeatable.annotation.retention=\u5305\u542b\u6ce8\u91ca\u7c7b\u578b ({0}) \u7684\u4fdd\u7559\u671f\u77ed\u4e8e\u53ef\u91cd\u590d\u6ce8\u91ca\u7c7b\u578b ({2}) \u7684\u4fdd\u7559\u671f

# 0: symbol, 1: symbol
compiler.err.invalid.repeatable.annotation.not.documented=\u53ef\u91cd\u590d\u6ce8\u91ca\u7c7b\u578b ({1}) \u662f @Documented, \u800c\u5305\u542b\u6ce8\u91ca\u7c7b\u578b ({0}) \u5219\u4e0d\u662f

# 0: symbol, 1: symbol
compiler.err.invalid.repeatable.annotation.not.inherited=\u53ef\u91cd\u590d\u6ce8\u91ca\u7c7b\u578b ({1}) \u662f @Inherited, \u800c\u5305\u542b\u6ce8\u91ca\u7c7b\u578b ({0}) \u5219\u4e0d\u662f

# 0: symbol, 1: symbol
compiler.err.invalid.repeatable.annotation.incompatible.target=\u5305\u542b\u6ce8\u91ca\u7c7b\u578b ({0}) \u9002\u7528\u7684\u76ee\u6807\u591a\u4e8e\u53ef\u91cd\u590d\u6ce8\u91ca\u7c7b\u578b ({1})

# 0: symbol
compiler.err.invalid.repeatable.annotation.repeated.and.container.present=\u5bb9\u5668 {0} \u4e0d\u5f97\u4e0e\u5176\u5305\u542b\u7684\u5143\u7d20\u540c\u65f6\u5b58\u5728

# 0: name
compiler.err.duplicate.class=\u7c7b\u91cd\u590d: {0}

compiler.err.duplicate.case.label=case \u6807\u7b7e\u91cd\u590d

compiler.err.duplicate.default.label=default \u6807\u7b7e\u91cd\u590d

compiler.err.else.without.if=\u6709 ''if'', \u4f46\u662f\u6ca1\u6709 ''else''

compiler.err.empty.char.lit=\u7a7a\u5b57\u7b26\u6587\u5b57

# 0: symbol
compiler.err.encl.class.required=\u9700\u8981\u5305\u542b{0}\u7684\u5c01\u95ed\u5b9e\u4f8b

compiler.err.enum.annotation.must.be.enum.constant=\u679a\u4e3e\u6ce8\u91ca\u503c\u5fc5\u987b\u662f\u679a\u4e3e\u5e38\u91cf

compiler.err.enum.cant.be.instantiated=\u65e0\u6cd5\u5b9e\u4f8b\u5316\u679a\u4e3e\u7c7b\u578b

compiler.err.enum.label.must.be.unqualified.enum=\u679a\u4e3e switch case \u6807\u7b7e\u5fc5\u987b\u4e3a\u679a\u4e3e\u5e38\u91cf\u7684\u975e\u9650\u5b9a\u540d\u79f0

compiler.err.enum.no.subclassing=\u7c7b\u65e0\u6cd5\u76f4\u63a5\u6269\u5c55 java.lang.Enum

compiler.err.enum.types.not.extensible=\u679a\u4e3e\u7c7b\u578b\u4e0d\u53ef\u7ee7\u627f

compiler.err.enum.no.finalize=\u679a\u4e3e\u4e0d\u80fd\u6709 finalize \u65b9\u6cd5

# 0: file name, 1: string
compiler.err.error.reading.file=\u8bfb\u53d6{0}\u65f6\u51fa\u9519; {1}

# 0: type
compiler.err.except.already.caught=\u5df2\u6355\u83b7\u5230\u5f02\u5e38\u9519\u8bef{0}

# 0: type
compiler.err.except.never.thrown.in.try=\u5728\u76f8\u5e94\u7684 try \u8bed\u53e5\u4e3b\u4f53\u4e2d\u4e0d\u80fd\u629b\u51fa\u5f02\u5e38\u9519\u8bef{0}

# 0: symbol
compiler.err.final.parameter.may.not.be.assigned=\u4e0d\u80fd\u5206\u914d\u6700\u7ec8\u53c2\u6570{0}

# 0: symbol
compiler.err.try.resource.may.not.be.assigned=\u53ef\u80fd\u672a\u5206\u914d\u53ef\u81ea\u52a8\u5173\u95ed\u7684\u8d44\u6e90{0}

# 0: symbol
compiler.err.multicatch.parameter.may.not.be.assigned=\u53ef\u80fd\u672a\u5206\u914d multi-catch \u53c2\u6570{0}

# 0: type, 1: type
compiler.err.multicatch.types.must.be.disjoint=multi-catch \u8bed\u53e5\u4e2d\u7684\u66ff\u4ee3\u65e0\u6cd5\u901a\u8fc7\u5b50\u7c7b\u5316\u5173\u8054\n\u66ff\u4ee3{0}\u662f\u66ff\u4ee3{1}\u7684\u5b50\u7c7b

compiler.err.finally.without.try=\u6709 ''finally'', \u4f46\u662f\u6ca1\u6709 ''try''

# 0: type, 1: message segment
compiler.err.foreach.not.applicable.to.type=for-each \u4e0d\u9002\u7528\u4e8e\u8868\u8fbe\u5f0f\u7c7b\u578b\n\u8981\u6c42: {1}\n\u627e\u5230:    {0}

compiler.err.fp.number.too.large=\u4e0d\u884c\u592a\u5927\u4e86\uff01\uff01\uff01

compiler.err.fp.number.too.small=\u662f\u82b1\u751f\u7c73\u5427\uff01

compiler.err.generic.array.creation=\u521b\u5efa\u6cdb\u578b\u6570\u7ec4

compiler.err.generic.throwable=\u6cdb\u578b\u7c7b\u4e0d\u80fd\u6269\u5c55 java.lang.Throwable

# 0: symbol
compiler.err.icls.cant.have.static.decl=\u5185\u90e8\u7c7b{0}\u4e2d\u7684\u9759\u6001\u58f0\u660e\u975e\u6cd5\n\u4fee\u9970\u7b26 ''static'' \u4ec5\u5141\u8bb8\u5728\u5e38\u91cf\u53d8\u91cf\u58f0\u660e\u4e2d\u4f7f\u7528

# 0: string
compiler.err.illegal.char=\u975e\u6cd5\u5b57\u7b26: ''{0}''

compiler.err.illegal.char.for.encoding=\u7f16\u7801{0}\u7684\u4e0d\u53ef\u6620\u5c04\u5b57\u7b26

# 0: set of modifier, 1: set of modifier
compiler.err.illegal.combination.of.modifiers=\u975e\u6cd5\u7684\u4fee\u9970\u7b26\u7ec4\u5408: {0}\u548c{1}

compiler.err.illegal.enum.static.ref=\u521d\u59cb\u5316\u7a0b\u5e8f\u4e2d\u5bf9\u9759\u6001\u5b57\u6bb5\u7684\u5f15\u7528\u4e0d\u5408\u6cd5

compiler.err.illegal.esc.char=\u975e\u6cd5\u8f6c\u4e49\u7b26

compiler.err.illegal.forward.ref=\u975e\u6cd5\u524d\u5411\u5f15\u7528

# 0: symbol, 1: string
compiler.err.not.in.profile={0}\u5728\u914d\u7f6e\u6587\u4ef6 ''{1}'' \u4e2d\u4e0d\u53ef\u7528

# 0: symbol
compiler.warn.forward.ref=\u5148\u5f15\u7528\u53d8\u91cf ''{0}'', \u7136\u540e\u518d\u5bf9\u5176\u521d\u59cb\u5316

compiler.err.illegal.self.ref=\u521d\u59cb\u5316\u7a0b\u5e8f\u4e2d\u5b58\u5728\u81ea\u5f15\u7528

# 0: symbol
compiler.warn.self.ref=\u53d8\u91cf ''{0}'' \u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u4e2d\u5b58\u5728\u81ea\u5f15\u7528

compiler.err.illegal.generic.type.for.instof=instanceof \u7684\u6cdb\u578b\u7c7b\u578b\u4e0d\u5408\u6cd5

# 0: type
compiler.err.illegal.initializer.for.type={0}\u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u4e0d\u5408\u6cd5

compiler.err.illegal.line.end.in.char.lit=\u5b57\u7b26\u6587\u5b57\u7684\u884c\u7ed3\u5c3e\u4e0d\u5408\u6cd5

compiler.err.illegal.nonascii.digit=\u975e\u6cd5\u7684\u975e ASCII \u6570\u5b57

compiler.err.illegal.underscore=\u975e\u6cd5\u4e0b\u5212\u7ebf

compiler.err.illegal.dot=\u975e\u6cd5 ''.''

# 0: symbol
compiler.err.illegal.qual.not.icls=\u975e\u6cd5\u9650\u5b9a\u7b26; {0}\u4e0d\u662f\u5185\u90e8\u7c7b

compiler.err.illegal.start.of.expr=\u975e\u6cd5\u7684\u8868\u8fbe\u5f0f\u5f00\u59cb

compiler.err.illegal.start.of.stmt=\u975e\u6cd5\u7684\u8bed\u53e5\u5f00\u59cb

compiler.err.illegal.start.of.type=\u975e\u6cd5\u7684\u7c7b\u578b\u5f00\u59cb

compiler.err.illegal.unicode.esc=\u975e\u6cd5\u7684 Unicode \u8f6c\u4e49

# 0: symbol
compiler.err.import.requires.canonical=\u5bfc\u5165\u9700\u8981{0}\u7684\u89c4\u8303\u540d\u79f0

compiler.err.improperly.formed.type.param.missing=\u7c7b\u578b\u7684\u683c\u5f0f\u4e0d\u6b63\u786e, \u7f3a\u5c11\u67d0\u4e9b\u53c2\u6570

compiler.err.improperly.formed.type.inner.raw.param=\u7c7b\u578b\u7684\u683c\u5f0f\u4e0d\u6b63\u786e, \u7ed9\u51fa\u4e86\u539f\u59cb\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570

# 0: type, 1: type
compiler.err.incomparable.types=\u4e0d\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b: {0}\u548c{1}

# 0: number
compiler.err.int.number.too.large=\u8fc7\u5927\u7684\u6574\u6570: {0}

compiler.err.intf.annotation.members.cant.have.params=\u6ce8\u91ca\u7c7b\u578b\u58f0\u660e\u4e2d\u7684\u5143\u7d20\u65e0\u6cd5\u58f0\u660e\u5f62\u53c2

# 0: symbol
compiler.err.intf.annotation.cant.have.type.params=\u6ce8\u91ca\u7c7b\u578b {0} \u4e0d\u80fd\u4e3a\u6cdb\u578b

compiler.err.intf.annotation.members.cant.have.type.params=\u6ce8\u91ca\u7c7b\u578b\u58f0\u660e\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u4e3a\u6cdb\u578b\u65b9\u6cd5

# 0: symbol, 1: type
compiler.err.intf.annotation.member.clash=\u6ce8\u91ca\u7c7b\u578b{1}\u58f0\u660e\u4e0e\u65b9\u6cd5 {0} \u540c\u540d\u7684\u5143\u7d20

compiler.err.intf.expected.here=\u6b64\u5904\u9700\u8981\u63a5\u53e3

compiler.err.intf.meth.cant.have.body=\u63a5\u53e3\u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u5e26\u6709\u4e3b\u4f53

# 0: symbol
compiler.err.invalid.annotation.member.type=\u6ce8\u91ca\u7c7b\u578b\u5143\u7d20 {0} \u7684\u7c7b\u578b\u65e0\u6548

compiler.err.invalid.binary.number=\u4e8c\u8fdb\u5236\u6570\u5b57\u4e2d\u5fc5\u987b\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570

compiler.err.invalid.hex.number=\u5341\u516d\u8fdb\u5236\u6570\u5b57\u5fc5\u987b\u5305\u542b\u81f3\u5c11\u4e00\u4f4d\u5341\u516d\u8fdb\u5236\u6570

compiler.err.invalid.meth.decl.ret.type.req=\u65b9\u6cd5\u58f0\u660e\u65e0\u6548; \u9700\u8981\u8fd4\u56de\u7c7b\u578b

compiler.err.varargs.and.old.array.syntax=variable-arity \u53c2\u6570\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528\u4f20\u7edf\u6570\u7ec4\u8bb0\u53f7

compiler.err.varargs.and.receiver =\u63a5\u6536\u65b9\u53c2\u6570\u4e0d\u5141\u8bb8\u4f7f\u7528 varargs \u8bb0\u53f7

compiler.err.array.and.receiver =\u63a5\u6536\u65b9\u53c2\u6570\u4e0d\u5141\u8bb8\u4f7f\u7528\u4f20\u7edf\u6570\u7ec4\u8bb0\u53f7

compiler.err.variable.not.allowed=\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528\u53d8\u91cf\u58f0\u660e

# 0: name
compiler.err.label.already.in.use=\u6807\u7b7e{0}\u5df2\u4f7f\u7528

# 0: symbol
compiler.err.local.var.accessed.from.icls.needs.final=\u4ece\u5185\u90e8\u7c7b\u4e2d\u8bbf\u95ee\u672c\u5730\u53d8\u91cf{0}; \u9700\u8981\u88ab\u58f0\u660e\u4e3a\u6700\u7ec8\u7c7b\u578b

compiler.err.local.enum=\u679a\u4e3e\u7c7b\u578b\u4e0d\u80fd\u4e3a\u672c\u5730\u7c7b\u578b

compiler.err.cannot.create.array.with.type.arguments=\u65e0\u6cd5\u521b\u5efa\u5177\u6709\u7c7b\u578b\u53d8\u91cf\u7684\u6570\u7ec4

compiler.err.cannot.create.array.with.diamond=\u65e0\u6cd5\u521b\u5efa\u5177\u6709 ''<>'' \u7684\u6570\u7ec4

#
# limits.  We don't give the limits in the diagnostic because we expect
# them to change, yet we want to use the same diagnostic.  These are all
# detected during code generation.
#
compiler.err.limit.code=\u4ee3\u7801\u8fc7\u957f

compiler.err.limit.code.too.large.for.try.stmt=try \u8bed\u53e5\u7684\u4ee3\u7801\u8fc7\u957f

compiler.err.limit.dimensions=\u6570\u7ec4\u7c7b\u578b\u7ef4\u8fc7\u591a

compiler.err.limit.locals=\u592a\u591a\u4e86\uff01\u545c\u545c\u545c~

compiler.err.limit.parameters=\u53c2\u6570\u8fc7\u591a

compiler.err.limit.pool=\u5e38\u91cf\u592a\u591a\u4e86\uff01\u545c\u545c\u545c~

compiler.err.limit.pool.in.class=\u7c7b{0}\u4e2d\u7684\u5e38\u91cf\u8fc7\u591a

compiler.err.limit.stack=\u4ee3\u7801\u9700\u8981\u8fc7\u591a\u592a\u591a\u4e86\uff01\u545c\u545c\u545c~

compiler.err.limit.string=\u5e38\u91cf\u5b57\u7b26\u4e32\u8fc7\u957f

compiler.err.limit.string.overflow=\u5bf9\u4e8e\u5e38\u91cf\u6c60\u6765\u8bf4, \u5b57\u7b26\u4e32 "{0}..." \u7684 UTF8 \u8868\u793a\u8fc7\u957f

compiler.err.malformed.fp.lit=\u6d6e\u70b9\u6587\u5b57\u7684\u683c\u5f0f\u9519\u8bef

compiler.err.method.does.not.override.superclass=\u65b9\u6cd5\u4e0d\u4f1a\u8986\u76d6\u6216\u5b9e\u73b0\u8d85\u7c7b\u578b\u7684\u65b9\u6cd5

compiler.err.missing.meth.body.or.decl.abstract=\u7f3a\u5c11\u65b9\u6cd5\u4e3b\u4f53, \u6216\u58f0\u660e\u62bd\u8c61

compiler.err.missing.ret.stmt=\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\u5462\uff1f

# 0: unused
compiler.misc.missing.ret.val=\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\u5462\uff1f

compiler.misc.unexpected.ret.val=\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\u5462\uff1f

# 0: set of modifier
compiler.err.mod.not.allowed.here=\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528\u4fee\u9970\u7b26{0}

compiler.err.intf.not.allowed.here=\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528\u63a5\u53e3

compiler.err.enums.must.be.static=\u53ea\u6709\u5728\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u624d\u5141\u8bb8\u4f7f\u7528\u679a\u4e3e\u58f0\u660e

# 0: symbol, 1: symbol
compiler.err.name.clash.same.erasure=\u540d\u79f0\u51b2\u7a81: {0}\u548c{1}\u5177\u6709\u76f8\u540c\u7591\u7b26

# 0: symbol, 1: symbol, 2: symbol, 3: symbol, 4: unused, 5: unused
compiler.err.name.clash.same.erasure.no.override=\u540d\u79f0\u51b2\u7a81: {1}\u4e2d\u7684{0}\u548c{3}\u4e2d\u7684{2}\u5177\u6709\u76f8\u540c\u7591\u7b26, \u4f46\u4e24\u8005\u5747\u4e0d\u8986\u76d6\u5bf9\u65b9

# 0: symbol, 1: symbol, 2: symbol, 3: symbol, 4: symbol, 5: symbol
compiler.err.name.clash.same.erasure.no.override.1=\u540d\u79f0\u51b2\u7a81: {1} \u4e2d\u7684 {0} \u8986\u76d6\u7684\u65b9\u6cd5\u7684\u7591\u7b26\u4e0e\u53e6\u4e00\u4e2a\u65b9\u6cd5\u7684\u76f8\u540c, \u4f46\u4e24\u8005\u5747\u4e0d\u8986\u76d6\u5bf9\u65b9\n\u7b2c\u4e00\u4e2a\u65b9\u6cd5:  {3} \u4e2d\u7684 {2}\n\u7b2c\u4e8c\u4e2a\u65b9\u6cd5: {5} \u4e2d\u7684 {4}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.err.name.clash.same.erasure.no.hide=\u540d\u79f0\u51b2\u7a81: {1} \u4e2d\u7684 {0} \u548c {3} \u4e2d\u7684 {2} \u5177\u6709\u76f8\u540c\u7591\u7b26, \u4f46\u4e24\u8005\u5747\u4e0d\u9690\u85cf\u5bf9\u65b9

compiler.err.name.reserved.for.internal.use={0}\u4e3a\u5185\u90e8\u4f7f\u7528\u4fdd\u7559

compiler.err.native.meth.cant.have.body=\u672c\u673a\u65b9\u6cd5\u4e0d\u80fd\u5e26\u6709\u4e3b\u4f53

# 0: type, 1: type
compiler.err.neither.conditional.subtype=? \u7684\u4e0d\u517c\u5bb9\u7c7b\u578b: \u4e24\u8005\u90fd\u4e0d\u662f\u5bf9\u65b9\u7684\u5b50\u7c7b\u578b\n\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570: {0}\n\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u6570: {1}

# 0: message segment
compiler.misc.incompatible.type.in.conditional=\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e2d\u7684\u7c7b\u578b\u9519\u8bef\n{0}

compiler.misc.conditional.target.cant.be.void=\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u76ee\u6807\u7c7b\u578b\u4e0d\u80fd\u4e3a\u7a7a

# 0: type
compiler.misc.incompatible.ret.type.in.lambda=lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u8fd4\u56de\u7c7b\u578b\u9519\u8bef\n{0}

# 0: type
compiler.misc.incompatible.ret.type.in.mref=\u65b9\u6cd5\u5f15\u7528\u4e2d\u7684\u8fd4\u56de\u7c7b\u578b\u9519\u8bef\n{0}

compiler.err.lambda.body.neither.value.nor.void.compatible=lambda \u4e3b\u4f53\u4e0d\u662f\u503c, \u4e5f\u4e0d\u4e0e void \u517c\u5bb9

# 0: list of type
compiler.err.incompatible.thrown.types.in.mref=\u65b9\u6cd5\u5f15\u7528\u4e2d\u629b\u51fa\u7684\u7c7b\u578b{0}\u4e0d\u517c\u5bb9

compiler.misc.incompatible.arg.types.in.lambda=lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u4e0d\u517c\u5bb9

compiler.misc.incompatible.arg.types.in.mref=\u65b9\u6cd5\u5f15\u7528\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u4e0d\u517c\u5bb9

compiler.err.new.not.allowed.in.annotation=\u6ce8\u91ca\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528 ''new''

compiler.err.no.annotation.member={1}\u4e2d\u6ca1\u6709\u6ce8\u91ca\u6210\u5458{0}

compiler.err.no.encl.instance.of.type.in.scope=\u4f5c\u7528\u57df\u4e2d\u6ca1\u6709\u7c7b\u578b\u4e3a{0}\u7684\u5c01\u95ed\u5b9e\u4f8b

compiler.err.no.intf.expected.here=\u6b64\u5904\u4e0d\u9700\u8981\u63a5\u53e3

compiler.err.no.match.entry={0}\u5728{1}\u7684\u6761\u76ee\u4e2d\u6ca1\u6709\u5339\u914d\u9879; \u9700\u8981{2}

compiler.err.not.annotation.type={0}\u4e0d\u662f\u6ce8\u91ca\u7c7b\u578b

# 0: symbol, 1: symbol
compiler.err.not.def.access.class.intf.cant.access={1}\u4e2d\u7684{0}\u662f\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u7c7b\u6216\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684

# 0: symbol, 1: symbol
compiler.misc.not.def.access.class.intf.cant.access={1}\u4e2d\u7684{0}\u662f\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u7c7b\u6216\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684

# 0: symbol, 1: list of type, 2: type
compiler.misc.cant.access.inner.cls.constr=\u65e0\u6cd5\u8bbf\u95ee\u6784\u9020\u5668 {0}({1})\n\u4f5c\u7528\u57df\u4e2d\u6ca1\u6709\u7c7b\u578b\u4e3a{2}\u7684\u5c01\u95ed\u5b9e\u4f8b

# 0: symbol, 1: symbol
compiler.err.not.def.public.cant.access={0}\u5728{1}\u4e2d\u4e0d\u662f\u516c\u5171\u7684; \u65e0\u6cd5\u4ece\u5916\u90e8\u7a0b\u5e8f\u5305\u4e2d\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee

# 0: symbol, 1: symbol
compiler.misc.not.def.public.cant.access={0}\u5728{1}\u4e2d\u4e0d\u662f\u516c\u5171\u7684; \u65e0\u6cd5\u4ece\u5916\u90e8\u7a0b\u5e8f\u5305\u4e2d\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee

# 0: name
compiler.err.not.loop.label=\u4e0d\u662f loop \u6807\u7b7e: {0}

compiler.err.not.stmt=\u4e0d\u662f\u8bed\u53e5(*\u2267\u03c9\u2264)

# 0: symbol
compiler.err.not.encl.class=(*\u2267\u03c9\u2264)\u4e0d\u662f\u5c01\u95ed\u7c7b: {0}

# 0: name, 1: type, 2: unused
compiler.err.operator.cant.be.applied=\u4e00\u5143\u8fd0\u7b97\u7b26 ''{0}'' \u7684\u64cd\u4f5c\u6570\u7c7b\u578b{1}\u9519\u8bef

# 0: name, 1: type, 2: type
compiler.err.operator.cant.be.applied.1=\u4e8c\u5143\u8fd0\u7b97\u7b26 ''{0}'' \u7684\u64cd\u4f5c\u6570\u7c7b\u578b\u9519\u8bef\n\u7b2c\u4e00\u4e2a\u7c7b\u578b:  {1}\n\u7b2c\u4e8c\u4e2a\u7c7b\u578b: {2}

compiler.err.pkg.annotations.sb.in.package-info.java=\u7a0b\u5e8f\u5305\u6ce8\u91ca\u5e94\u5728\u6587\u4ef6 package-info.java \u4e2d

# 0: symbol
compiler.err.pkg.clashes.with.class.of.same.name=\u7a0b\u5e8f\u5305{0}\u4e0e\u5e26\u6709\u76f8\u540c\u540d\u79f0\u7684\u7c7b\u51b2\u7a81

compiler.err.warnings.and.werror=\u53d1\u73b0\u6742\u9c7c~ -Werror

# Errors related to annotation processing

# 0: symbol, 1: string, 2: stack-trace
compiler.err.proc.cant.access=\u65e0\u6cd5\u8bbf\u95ee{0}\n{1}\n\u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u53c2\u9605\u4ee5\u4e0b\u5806\u6808\u8ddf\u8e2a\u3002\n{2}

# 0: symbol, 1: string
compiler.err.proc.cant.access.1=\u65e0\u6cd5\u8bbf\u95ee{0}\n{1}

# 0: string
compiler.err.proc.cant.find.class=\u627e\u4e0d\u5230 ''{0}'' \u7684\u7c7b\u6587\u4ef6\u3002

# Print a client-generated error message; assumed to be localized, no translation required
# 0: string
compiler.err.proc.messager={0}

# 0: list of string
compiler.err.proc.no.explicit.annotation.processing.requested=\u4ec5\u5f53\u663e\u5f0f\u8bf7\u6c42\u6ce8\u91ca\u5904\u7406\u65f6\u624d\u63a5\u53d7\u7c7b\u540d\u79f0 ''{0}''

compiler.err.proc.no.service=ServiceLoader \u4e0d\u53ef\u7528, \u4f46\u5b83\u662f\u6ce8\u91ca\u5904\u7406\u6240\u5fc5\u9700\u7684\u3002

compiler.err.proc.processor.bad.option.name=\u5904\u7406\u7a0b\u5e8f ''{1}'' \u63d0\u4f9b\u7684\u9009\u9879\u540d\u79f0 ''{0}'' \u9519\u8bef

# 0: string
compiler.err.proc.processor.cant.instantiate=\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5904\u7406\u7a0b\u5e8f ''{0}'' \u7684\u5b9e\u4f8b

# 0: string
compiler.err.proc.processor.not.found=\u627e\u4e0d\u5230\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f ''{0}''

# 0: string
compiler.err.proc.processor.wrong.type=\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f ''{0}'' \u672a\u5b9e\u73b0 javax.annotation.processing.Processor

compiler.err.proc.service.problem=\u521b\u5efa\u670d\u52a1\u52a0\u8f7d\u5668\u4ee5\u52a0\u8f7d\u5904\u7406\u7a0b\u5e8f\u65f6\u51fa\u9519\u3002

compiler.err.proc.bad.config.file=\u670d\u52a1\u914d\u7f6e\u6587\u4ef6\u4e0d\u6b63\u786e, \u6216\u6784\u9020\u5904\u7406\u7a0b\u5e8f\u5bf9\u8c61{0}\u65f6\u629b\u51fa\u5f02\u5e38\u9519\u8bef

compiler.err.proc.cant.create.loader=\u65e0\u6cd5\u4e3a\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f{0}\u521b\u5efa\u7c7b\u52a0\u8f7d\u5668

# 0: unused
compiler.err.qualified.new.of.static.class=\u9650\u5b9a\u7684\u65b0\u9759\u6001\u7c7b

compiler.err.recursive.ctor.invocation=\u9012\u5f52\u6784\u9020\u5668\u8c03\u7528

# 0: name, 1: symbol kind, 2: symbol, 3: symbol, 4: symbol kind, 5: symbol, 6: symbol
compiler.err.ref.ambiguous=\u5bf9{0}\u7684\u5f15\u7528\u4e0d\u660e\u786e\n{3} \u4e2d\u7684{1} {2} \u548c {6} \u4e2d\u7684{4} {5} \u90fd\u5339\u914d

# 0: name, 1: symbol kind, 2: symbol, 3: symbol, 4: symbol kind, 5: symbol, 6: symbol
compiler.misc.ref.ambiguous=\u5bf9{0}\u7684\u5f15\u7528\u4e0d\u660e\u786e\n{3} \u4e2d\u7684{1} {2} \u548c {6} \u4e2d\u7684{4} {5} \u90fd\u5339\u914d

compiler.err.repeated.annotation.target=\u6ce8\u91ca\u76ee\u6807\u91cd\u590d

compiler.err.repeated.interface=\u63a5\u53e3\u91cd\u590d

compiler.err.repeated.modifier=\u4fee\u9970\u7b26\u91cd\u590d

# 0: symbol, 1: set of modifier, 2: symbol
compiler.err.report.access={0} \u5728 {2} \u4e2d\u662f {1} \u8bbf\u95ee\u63a7\u5236

# 0: symbol, 1: set of modifier, 2: symbol
compiler.misc.report.access={0} \u5728 {2} \u4e2d\u662f {1} \u8bbf\u95ee\u63a7\u5236

compiler.err.ret.outside.meth=\u8fd4\u56de\u5916\u90e8\u65b9\u6cd5

compiler.err.signature.doesnt.match.supertype=\u7b7e\u540d\u4e0e{0}\u4e0d\u5339\u914d; \u4e0d\u517c\u5bb9\u7684\u8d85\u7c7b\u578b

compiler.err.signature.doesnt.match.intf=\u7b7e\u540d\u4e0e{0}\u4e0d\u5339\u914d; \u4e0d\u517c\u5bb9\u7684\u63a5\u53e3

# 0: number, 1: number
compiler.err.method.invoked.with.incorrect.number.arguments=\u4f7f\u7528\u4e0d\u6b63\u786e\u6570\u91cf\u7684\u53c2\u6570\u8c03\u7528\u4e86\u65b9\u6cd5; \u9884\u671f\u4e3a {0} \u4e2a, \u627e\u5230 {1} \u4e2a

# 0: symbol, 1: symbol, 2: symbol
compiler.err.does.not.override.abstract={0}\u4e0d\u662f\u62bd\u8c61\u7684, \u5e76\u4e14\u672a\u8986\u76d6{2}\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5{1}

compiler.err.source.cant.overwrite.input.file=\u5199\u5165\u6e90\u65f6\u51fa\u9519; \u65e0\u6cd5\u8986\u76d6\u8f93\u5165\u6587\u4ef6{0}

compiler.err.stack.sim.error=\u5185\u90e8\u9519\u8bef: {0}\u4e2d\u7684\u592a\u591a\u4e86\uff01\u545c\u545c\u545c~ sim \u9519\u8bef

compiler.err.static.imp.only.classes.and.interfaces=\u4ec5\u4ece\u7c7b\u548c\u63a5\u53e3\u9759\u6001\u5bfc\u5165

compiler.err.string.const.req=\u9700\u8981\u5e38\u91cf\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f

# 0: symbol, 1: symbol
compiler.err.synthetic.name.conflict=\u7b26\u53f7{0}\u4e0e{1}\u4e2d\u7684 compiler-synthesized \u7b26\u53f7\u51b2\u7a81

# 0: symbol, 1: symbol
compiler.warn.synthetic.name.conflict=\u7b26\u53f7{0}\u4e0e{1}\u4e2d\u7684 compiler-synthesized \u7b26\u53f7\u51b2\u7a81

compiler.err.throws.not.allowed.in.intf.annotation=@interface \u6210\u5458\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528 throws \u5b50\u53e5

compiler.err.try.without.catch.or.finally=\u6709 ''try'', \u4f46\u662f\u6ca1\u6709 ''catch'' \u6216 ''finally''

compiler.err.try.without.catch.finally.or.resource.decls=''try'' \u4e0d\u5e26\u6709 ''catch'', ''finally'' \u6216\u8d44\u6e90\u58f0\u660e

# 0: symbol
compiler.err.type.doesnt.take.params=\u7c7b\u578b{0}\u4e0d\u5e26\u6709\u53c2\u6570

compiler.err.type.var.cant.be.deref=\u65e0\u6cd5\u4ece\u7c7b\u578b\u53d8\u91cf\u4e2d\u8fdb\u884c\u9009\u62e9

compiler.err.type.var.may.not.be.followed.by.other.bounds=\u7c7b\u578b\u53d8\u91cf\u540e\u9762\u4e0d\u80fd\u5e26\u6709\u5176\u4ed6\u9650\u5236\u8303\u56f4

compiler.err.type.var.more.than.once=\u7c7b\u578b\u53d8\u91cf{0}\u5728{1}\u7684\u7ed3\u679c\u7c7b\u578b\u4e2d\u591a\u6b21\u51fa\u73b0; \u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5b9e\u4f8b\u5316

compiler.err.type.var.more.than.once.in.result=\u7c7b\u578b\u53d8\u91cf{0}\u5728{1}\u7684\u7c7b\u578b\u4e2d\u591a\u6b21\u51fa\u73b0; \u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5b9e\u4f8b\u5316

# 0: type, 1: type, 2: string
compiler.err.types.incompatible.diff.ret=\u7c7b\u578b{0}\u548c{1}\u4e0d\u517c\u5bb9; \u4e24\u8005\u90fd\u5b9a\u4e49\u4e86{2}, \u4f46\u5374\u5e26\u6709\u4e0d\u76f8\u5173\u7684\u8fd4\u56de\u7c7b\u578b

# 0: kind, 1: type, 2: name, 3: list of type, 4: symbol, 5: symbol
compiler.err.types.incompatible.unrelated.defaults={0} {1}\u4ece\u7c7b\u578b {4} \u548c {5} \u4e2d\u7ee7\u627f\u4e86{2}({3}) \u7684\u4e0d\u76f8\u5173\u9ed8\u8ba4\u503c

# 0: kind, 1: type, 2: name, 3: list of type, 4: symbol, 5: symbol
compiler.err.types.incompatible.abstract.default={0} {1}\u4ece\u7c7b\u578b {4} \u548c {5} \u4e2d\u7ee7\u627f\u4e86{2}({3}) \u7684\u62bd\u8c61\u548c\u9ed8\u8ba4\u503c

# 0: name, 1: kind, 2: symbol
compiler.err.default.overrides.object.member={1} {2} \u4e2d\u7684\u9ed8\u8ba4\u65b9\u6cd5{0}\u8986\u76d6\u4e86 java.lang.Object \u7684\u6210\u5458

# 0: type
compiler.err.illegal.static.intf.meth.call=\u9759\u6001\u63a5\u53e3\u65b9\u6cd5\u8c03\u7528\u975e\u6cd5\n\u5e94\u5c06\u63a5\u6536\u65b9\u8868\u8fbe\u5f0f\u66ff\u6362\u4e3a\u7c7b\u578b\u9650\u5b9a\u7b26 ''{0}''

# 0: type, 1: message segment
compiler.err.illegal.default.super.call=\u9ed8\u8ba4\u8d85\u7ea7\u8c03\u7528\u4e2d\u7684\u7c7b\u578b\u9650\u5b9a\u7b26{0}\u9519\u8bef\n{1}

# 0: symbol, 1: type
compiler.misc.overridden.default=\u8986\u76d6\u4e86{1}\u4e2d\u7684\u65b9\u6cd5 {0}

# 0: symbol, 1: type or symbol
compiler.misc.redundant.supertype=\u5197\u4f59\u63a5\u53e3 {0} \u5df2\u7531 {1} \u6269\u5c55

compiler.err.unclosed.char.lit=\u672a\u7ed3\u675f\u7684\u5b57\u7b26\u6587\u5b57

compiler.err.unclosed.comment=\u672a\u7ed3\u675f\u7684\u6ce8\u91ca

compiler.err.unclosed.str.lit=\u672a\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u6587\u5b57

# 0: name
compiler.err.unsupported.encoding=\u4e0d\u652f\u6301\u7684\u7f16\u7801: {0}

compiler.err.io.exception=\u8bfb\u53d6\u6e90\u6587\u4ef6\u65f6\u51fa\u9519: {0}

# 0: name
compiler.err.undef.label=\u672a\u5b9a\u4e49\u7684\u6807\u7b7e: {0}

# 0: message segment, 1: unused
compiler.err.cant.apply.diamond=\u65e0\u6cd5\u63a8\u65ad{0}\u7684\u7c7b\u578b\u53c2\u6570

# 0: message segment or type, 1: message segment
compiler.err.cant.apply.diamond.1=\u65e0\u6cd5\u63a8\u65ad{0}\u7684\u7c7b\u578b\u53c2\u6570\n\u539f\u56e0: {1}

# 0: message segment or type, 1: message segment
compiler.misc.cant.apply.diamond.1=\u65e0\u6cd5\u63a8\u65ad{0}\u7684\u7c7b\u578b\u53c2\u6570\n\u539f\u56e0: {1}

compiler.err.unreachable.stmt=\u65e0\u6cd5\u8bbf\u95ee\u7684\u8bed\u53e5

compiler.err.initializer.must.be.able.to.complete.normally=\u521d\u59cb\u5316\u7a0b\u5e8f\u5fc5\u987b\u80fd\u591f\u6b63\u5e38\u5b8c\u6210

# 0: type
compiler.err.unreported.exception.need.to.catch.or.throw=\u672a\u62a5\u544a\u7684\u5f02\u5e38\u9519\u8bef{0}; \u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6355\u83b7\u6216\u58f0\u660e\u4ee5\u4fbf\u629b\u51fa

# 0: type
compiler.err.unreported.exception.default.constructor=\u9ed8\u8ba4\u6784\u9020\u5668\u4e2d\u672a\u62a5\u544a\u7684\u5f02\u5e38\u9519\u8bef{0}

# 0: type, 1: name
compiler.err.unreported.exception.implicit.close=\u672a\u62a5\u544a\u7684\u5f02\u5e38\u9519\u8bef{0}; \u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6355\u83b7\u6216\u58f0\u660e\u4ee5\u4fbf\u629b\u51fa\n\u5bf9\u8d44\u6e90\u53d8\u91cf ''{1}'' \u9690\u5f0f\u8c03\u7528 close() \u65f6\u629b\u51fa\u4e86\u5f02\u5e38\u9519\u8bef

compiler.err.unsupported.cross.fp.lit=\u8be5 VM \u4e0d\u652f\u6301\u5341\u516d\u8fdb\u5236\u6d6e\u70b9\u6587\u5b57

compiler.err.void.not.allowed.here=\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528 ''\u7a7a'' \u7c7b\u578b

# 0: string
compiler.err.wrong.number.type.args=\u7c7b\u578b\u53d8\u91cf\u6570\u76ee\u9519\u8bef; \u9700\u8981{0}

# 0: symbol
compiler.err.var.might.already.be.assigned=\u53ef\u80fd\u5df2\u5206\u914d\u53d8\u91cf{0}

# 0: symbol
compiler.err.var.might.not.have.been.initialized=\u53ef\u80fd\u5c1a\u672a\u521d\u59cb\u5316\u53d8\u91cf{0}

# 0: symbol
compiler.err.var.not.initialized.in.default.constructor=\u53d8\u91cf {0} \u672a\u5728\u9ed8\u8ba4\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316

# 0: symbol
compiler.err.var.might.be.assigned.in.loop=\u53ef\u80fd\u5728 loop \u4e2d\u5206\u914d\u4e86\u53d8\u91cf{0}

# 0: symbol, 1: message segment
compiler.err.varargs.invalid.trustme.anno={0} \u6ce8\u91ca\u65e0\u6548\u3002{1}

# 0: type
compiler.misc.varargs.trustme.on.reifiable.varargs=Varargs \u5143\u7d20\u7c7b\u578b{0}\u53ef\u5177\u4f53\u5316\u3002

# 0: symbol
compiler.misc.varargs.trustme.on.non.varargs.meth=\u65b9\u6cd5 {0} \u4e0d\u662f varargs \u65b9\u6cd5\u3002

# 0: symbol
compiler.misc.varargs.trustme.on.virtual.varargs=\u5b9e\u4f8b\u65b9\u6cd5 {0} \u4e0d\u662f\u6700\u7ec8\u7684\u3002

# 0: type, 1: symbol kind, 2: symbol
compiler.misc.inaccessible.varargs.type=\u5f62\u5f0f varargs \u5143\u7d20\u7c7b\u578b{0}\u65e0\u6cd5\u4ece {1} {2} \u8fdb\u884c\u8bbf\u95ee

# In the following string, {1} will always be the detail message from
# java.io.IOException.
# 0: symbol, 1: string
compiler.err.class.cant.write=\u5199\u5165{0}\u65f6\u51fa\u9519: {1}

# In the following string, {0} is the name of the class in the Java source.
# It really should be used two times..
# 0: name
compiler.err.class.public.should.be.in.file=\u7c7b{0}\u662f\u516c\u5171\u7684, \u5e94\u5728\u540d\u4e3a {0}.java \u7684\u6587\u4ef6\u4e2d\u58f0\u660e

## All errors which do not refer to a particular line in the source code are
## preceded by this string.
compiler.err.error=\u7b28\u86cb\uff01: 

# The following error messages do not refer to a line in the source code.
compiler.err.cant.read.file=\u65e0\u6cd5\u8bfb\u53d6: {0}

#####

# Fatal Errors

compiler.misc.fatal.err.no.java.lang=\u6742\u9c7c\u6ca1\u6551\u4e86\u5462~: \u5728\u7c7b\u8def\u5f84\u6216\u5f15\u5bfc\u7c7b\u8def\u5f84\u4e2d\u627e\u4e0d\u5230\u7a0b\u5e8f\u5305 java.lang

compiler.misc.fatal.err.cant.locate.meth=\u6742\u9c7c\u6ca1\u6551\u4e86\u5462~: \u627e\u4e0d\u5230\u65b9\u6cd5{0}

compiler.misc.fatal.err.cant.locate.field=\u6742\u9c7c\u6ca1\u6551\u4e86\u5462~: \u627e\u4e0d\u5230\u5b57\u6bb5{0}

compiler.misc.fatal.err.cant.locate.ctor=\u6742\u9c7c\u6ca1\u6551\u4e86\u5462~: \u627e\u4e0d\u5230{0}\u7684\u6784\u9020\u5668

compiler.misc.fatal.err.cant.close=\u6742\u9c7c\u6ca1\u6551\u4e86\u5462~: \u65e0\u6cd5\u5173\u95ed\u7f16\u8bd1\u5668\u8d44\u6e90

#####

##
## miscellaneous strings
##

compiler.misc.source.unavailable=(\u6e90\u4e0d\u53ef\u7528)

compiler.misc.base.membership=\u60a8\u7684\u6240\u6709\u57fa\u7c7b\u90fd\u5c5e\u4e8e\u6211\u4eec

# 0: string, 1: string, 2: boolean
compiler.misc.x.print.processor.info=\u5904\u7406\u7a0b\u5e8f{0}\u4e0e{1}\u5339\u914d\u5e76\u8fd4\u56de{2}\u3002

# 0: number, 1: string, 2: set of symbol, 3: boolean
compiler.misc.x.print.rounds=\u5faa\u73af {0}:\n\t\u8f93\u5165\u6587\u4ef6: {1}\n\t\u6ce8\u91ca: {2}\n\t\u6700\u540e\u4e00\u4e2a\u5faa\u73af: {3}

#####

## The following string will appear before all messages keyed as:
## "compiler.note".

compiler.note.compressed.diags=\u67d0\u4e9b\u6d88\u606f\u5df2\u7ecf\u8fc7\u7b80\u5316; \u8bf7\u4f7f\u7528 -Xdiags:verbose \u91cd\u65b0\u7f16\u8bd1\u4ee5\u83b7\u5f97\u5b8c\u6574\u8f93\u51fa

compiler.note.potential.lambda.found=\u53ef\u5c06\u6b64\u533f\u540d\u5185\u90e8\u7c7b\u521b\u5efa\u8f6c\u6362\u4e3a lambda \u8868\u8fbe\u5f0f\u3002

# 0: boolean, 1: symbol
compiler.note.lambda.stat=\u8f6c\u6362 lambda \u8868\u8fbe\u5f0f\n\u66ff\u4ee3 metafactory = {0}\n\u5408\u6210\u65b9\u6cd5 = {1}

# 0: boolean, 1: unused
compiler.note.mref.stat=\u8f6c\u6362\u65b9\u6cd5\u5f15\u7528\n\u66ff\u4ee3 metafactory = {0}\n
# 0: boolean, 1: symbol
compiler.note.mref.stat.1=\u8f6c\u6362\u65b9\u6cd5\u5f15\u7528\n\u66ff\u4ee3 metafactory = {0}\nbridge \u65b9\u6cd5 = {1}

compiler.note.note=\u6ce8: 

# 0: file name
compiler.note.deprecated.filename={0}\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002

compiler.note.deprecated.plural=\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002

# The following string may appear after one of the above deprecation
# messages.
compiler.note.deprecated.recompile=\u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002

# 0: file name
compiler.note.deprecated.filename.additional={0}\u8fd8\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002

compiler.note.deprecated.plural.additional=\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u8fd8\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002

# 0: file name
compiler.note.unchecked.filename={0}\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002

compiler.note.unchecked.plural=\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002

# The following string may appear after one of the above deprecation
# messages.
compiler.note.unchecked.recompile=\u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:unchecked \u91cd\u65b0\u7f16\u8bd1\u3002

# 0: file name
compiler.note.unchecked.filename.additional={0}\u8fd8\u6709\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002

compiler.note.unchecked.plural.additional=\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u8fd8\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002

# 0: file name
compiler.note.sunapi.filename={0}\u4f7f\u7528\u4e86\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u53d1\u884c\u7248\u4e2d\u5220\u9664\u7684\u5185\u90e8\u4e13\u7528 API\u3002

compiler.note.sunapi.plural=\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u53d1\u884c\u7248\u4e2d\u5220\u9664\u7684\u5185\u90e8\u4e13\u7528 API\u3002

# The following string may appear after one of the above sunapi messages.
compiler.note.sunapi.recompile=\u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:sunapi \u91cd\u65b0\u7f16\u8bd1\u3002

# 0: file name
compiler.note.sunapi.filename.additional={0}\u4f7f\u7528\u4e86\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u53d1\u884c\u7248\u4e2d\u5220\u9664\u7684\u5176\u4ed6\u5185\u90e8\u4e13\u7528 API\u3002

compiler.note.sunapi.plural.additional=\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u53d1\u884c\u7248\u4e2d\u5220\u9664\u7684\u5176\u4ed6\u5185\u90e8\u4e13\u7528 API\u3002

# Notes related to annotation processing

# Print a client-generated note; assumed to be localized, no translation required
# 0: string
compiler.note.proc.messager={0}

#####

# 0: number
compiler.misc.count.error={0} \u4e2a\u9519\u8bef

# 0: number
compiler.misc.count.error.plural={0} \u4e2a\u9519\u8bef

# 0: number
compiler.misc.count.warn={0} \u4e2a\u8b66\u544a

# 0: number
compiler.misc.count.warn.plural={0} \u4e2a\u8b66\u544a

compiler.misc.version.not.available=(\u7248\u672c\u4fe1\u606f\u4e0d\u53ef\u7528)

## extra output when using -verbose (JavaCompiler)

# 0: symbol
compiler.misc.verbose.checking.attribution=[\u6b63\u5728\u68c0\u67e5{0}]

# 0: string
compiler.misc.verbose.parsing.done=[\u89e3\u6790\u5df2\u5b8c\u6210, \u7528\u65f6 {0} \u6beb\u79d2]

# 0: file name
compiler.misc.verbose.parsing.started=[\u89e3\u6790\u5f00\u59cb\u65f6\u95f4 {0}]

# 0: string
compiler.misc.verbose.total=[\u5171 {0} \u6beb\u79d2]

# 0: file name
compiler.misc.verbose.wrote.file=[\u5df2\u5199\u5165{0}]

## extra output when using -verbose (Retro)
compiler.misc.verbose.retro=[\u6b63\u5728\u66f4\u65b0{0}]

compiler.misc.verbose.retro.with=\t\u6b63\u5728\u4f7f\u7528{1}\u66f4\u65b0{0}

compiler.misc.verbose.retro.with.list=\t\u6b63\u5728\u4f7f\u7528\u7c7b\u578b\u53c2\u6570{1}, \u8d85\u7c7b\u578b{2}\u548c\u63a5\u53e3{3}\u66f4\u65b0{0}

## extra output when using -verbose (code/ClassReader)
# 0: string
compiler.misc.verbose.loading=[\u6b63\u5728\u52a0\u8f7d{0}]

# 0: string
compiler.misc.verbose.sourcepath=[\u6e90\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84: {0}]

# 0: string
compiler.misc.verbose.classpath=[\u7c7b\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84: {0}]

## extra output when using -checkclassfile (code/ClassReader)
compiler.misc.ccf.found.later.version=\u7c7b\u6587\u4ef6\u7684\u7248\u672c\u9ad8\u4e8e\u9884\u671f: {0}

compiler.misc.ccf.unrecognized.attribute=\u65e0\u6cd5\u8bc6\u522b\u7684\u5c5e\u6027: {0}

## extra output when using -prompt (util/Log)
compiler.misc.resume.abort=\u7ee7\u7eed(R), \u653e\u5f03(A)>

#####

##
## warnings
##

## All warning messages are preceded by the following string.
compiler.warn.warning=\u6742\u9c7c~: 

## Warning messages may also include the following prefix to identify a
## lint option
# 0: option name
compiler.warn.lintOption=[{0}] 

# 0: symbol
compiler.warn.constant.SVUID=serialVersionUID \u5728\u7c7b{0}\u4e2d\u5fc5\u987b\u662f\u5e38\u91cf

# 0: file name
compiler.warn.dir.path.element.not.found=\u9519\u8bef\u7684\u8def\u5f84\u5143\u7d20 "{0}": \u6ca1\u6709\u8fd9\u79cd\u76ee\u5f55

compiler.warn.finally.cannot.complete=finally \u5b50\u53e5\u65e0\u6cd5\u6b63\u5e38\u5b8c\u6210

# 0: symbol, 1: symbol
compiler.warn.has.been.deprecated={1}\u4e2d\u7684{0}\u5df2\u8fc7\u65f6

# 0: symbol
compiler.warn.sun.proprietary={0}\u662f\u5185\u90e8\u4e13\u7528 API, \u53ef\u80fd\u4f1a\u5728\u672a\u6765\u53d1\u884c\u7248\u4e2d\u5220\u9664

compiler.warn.illegal.char.for.encoding=\u7f16\u7801{0}\u7684\u4e0d\u53ef\u6620\u5c04\u5b57\u7b26\uff0c\u5927\u7b28\u86cb\uff01

# 0: symbol
compiler.warn.improper.SVUID=\u5fc5\u987b\u5728\u7c7b{0}\u4e2d\u5c06 serialVersionUID \u58f0\u660e\u4e3a static final

# 0: type, 1: type
compiler.warn.inexact.non-varargs.call=\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f7f\u7528\u4e86\u4e0d\u51c6\u786e\u7684\u53d8\u91cf\u7c7b\u578b\u7684 varargs \u65b9\u6cd5\u7684\u975e varargs \u8c03\u7528; \n\u5bf9\u4e8e varargs \u8c03\u7528, \u5e94\u4f7f\u7528 {0}\n\u5bf9\u4e8e\u975e varargs \u8c03\u7528, \u5e94\u4f7f\u7528 {1}, \u8fd9\u6837\u4e5f\u53ef\u4ee5\u6291\u5236\u6b64\u8b66\u544a

# 0: list of type
compiler.warn.unreachable.catch=catch \u5b50\u53e5\u65e0\u6cd5\u8bbf\u95ee\n\u5df2\u6355\u83b7\u5230\u629b\u51fa\u7684\u7c7b\u578b{0}

# 0: list of type
compiler.warn.unreachable.catch.1=catch \u5b50\u53e5\u65e0\u6cd5\u8bbf\u95ee\n\u5df2\u6355\u83b7\u5230\u629b\u51fa\u7684\u7c7b\u578b{0}

# 0: symbol
compiler.warn.long.SVUID=serialVersionUID \u5728\u7c7b{0}\u4e2d\u5fc5\u987b\u662f long \u7c7b\u578b

# 0: symbol
compiler.warn.missing.SVUID=\u53ef\u5e8f\u5217\u5316\u7c7b{0}\u6ca1\u6709 serialVersionUID \u7684\u5b9a\u4e49

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.warn.potentially.ambiguous.overload={1} \u4e2d\u7684 {0} \u53ef\u80fd\u4e0e {3} \u4e2d\u7684 {2} \u6df7\u6dc6

# 0: message segment
compiler.warn.override.varargs.missing={0}; \u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u6ca1\u6709 ''...''

# 0: message segment
compiler.warn.override.varargs.extra={0}; \u8986\u76d6\u7684\u65b9\u6cd5\u7f3a\u5c11 ''...''

compiler.warn.override.bridge={0}; \u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u4e3a bridge \u65b9\u6cd5

# 0: symbol
compiler.warn.pkg-info.already.seen=\u5df2\u627e\u5230\u7a0b\u5e8f\u5305{0}\u7684 package-info.java \u6587\u4ef6

# 0: file name
compiler.warn.path.element.not.found=\u9519\u8bef\u7684\u8def\u5f84\u5143\u7d20 "{0}": \u6ca1\u6709\u8fd9\u79cd\u6587\u4ef6\u6216\u76ee\u5f55

compiler.warn.possible.fall-through.into.case=\u53ef\u80fd\u65e0\u6cd5\u5b9e\u73b0 case

# 0: type
compiler.warn.redundant.cast=\u51fa\u73b0\u5197\u4f59\u7684\u5230{0}\u7684\u8f6c\u6362

# 0: number
compiler.warn.position.overflow=\u8fd9\u91cc {0} \u704c\u592a\u6ee1\u4e86\u6ea2\u51fa\u6765\u4e86

# 0: file name, 1: number, 2: number
compiler.warn.big.major.version={0}: \u4e3b\u7248\u672c {1} \u6bd4 {2} \u65b0, \u6b64\u7f16\u8bd1\u5668\u652f\u6301\u6700\u65b0\u7684\u4e3b\u7248\u672c\u3002\n\u5efa\u8bae\u5347\u7ea7\u6b64\u7f16\u8bd1\u5668\u3002

# 0: symbol kind, 1: symbol
compiler.warn.static.not.qualified.by.type=static {0}\u5e94\u7531\u7c7b\u578b\u540d\u79f0{1}\u800c\u4e0d\u662f\u8868\u8fbe\u5f0f\u9650\u5b9a

# 0: string
compiler.warn.source.no.bootclasspath=\u672a\u4e0e -source {0} \u4e00\u8d77\u8bbe\u7f6e\u5f15\u5bfc\u7c7b\u8def\u5f84

# 0: string
compiler.warn.option.obsolete.source=\u6e90\u503c{0}\u5df2\u8fc7\u65f6, \u5c06\u5728\u672a\u6765\u6240\u6709\u53d1\u884c\u7248\u4e2d\u5220\u9664

# 0: string
compiler.warn.option.obsolete.target=\u76ee\u6807\u503c{0}\u5df2\u8fc7\u65f6, \u5c06\u5728\u672a\u6765\u6240\u6709\u53d1\u884c\u7248\u4e2d\u5220\u9664

compiler.warn.option.obsolete.suppression=\u8981\u9690\u85cf\u6709\u5173\u5df2\u8fc7\u65f6\u9009\u9879\u7684\u8b66\u544a, \u8bf7\u4f7f\u7528 -Xlint:-options\u3002

# 0: name, 1: number, 2: number, 3: number, 4: number
compiler.warn.future.attr={1}.{2} \u7248\u7c7b\u6587\u4ef6\u4e2d\u5f15\u5165\u7684 {0} \u5c5e\u6027\u5728 {3}.{4} \u7248\u7c7b\u6587\u4ef6\u4e2d\u88ab\u5ffd\u7565

# Warnings related to annotation processing
# 0: name
compiler.warn.proc.package.does.not.exist=\u7a0b\u5e8f\u5305{0}\u4e0d\u5b58\u5728

# 0: name
compiler.warn.proc.file.reopening=\u5c1d\u8bd5\u591a\u6b21\u4e3a ''{0}'' \u521b\u5efa\u6587\u4ef6

# 0: name
compiler.warn.proc.type.already.exists=\u7c7b\u578b ''{0}'' \u7684\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4e8e\u6e90\u8def\u5f84\u6216\u7c7b\u8def\u5f84\u4e2d

# 0: name
compiler.warn.proc.type.recreate=\u5c1d\u8bd5\u591a\u6b21\u521b\u5efa\u7c7b\u578b ''{0}'' \u7684\u6587\u4ef6

# 0: string
compiler.warn.proc.illegal.file.name=\u65e0\u6cd5\u521b\u5efa\u5e26\u6709\u975e\u6cd5\u540d\u79f0 ''{0}'' \u7684\u6587\u4ef6\u3002

# 0: string, 1: string
compiler.warn.proc.suspicious.class.name=\u6b63\u5728\u4e3a\u540d\u79f0\u4ee5{1}\u7ed3\u5c3e\u7684\u7c7b\u578b\u521b\u5efa\u6587\u4ef6: ''{0}''

# 0: name
compiler.warn.proc.file.create.last.round=\u5c06\u4e0d\u5bf9\u5728\u6700\u540e\u4e00\u4e2a\u5faa\u73af\u4e2d\u521b\u5efa\u7684\u7c7b\u578b\u4e3a ''{0}'' \u7684\u6587\u4ef6\u8fdb\u884c\u6ce8\u91ca\u5904\u7406\u3002

# 0: string, 1: string
compiler.warn.proc.malformed.supported.string=\u5904\u7406\u7a0b\u5e8f ''{1}'' \u4e3a\u652f\u6301\u7684\u6ce8\u91ca\u7c7b\u578b\u8fd4\u56de\u683c\u5f0f\u9519\u8bef\u7684\u5b57\u7b26\u4e32 ''{0}''

# 0: set of string
compiler.warn.proc.annotations.without.processors=\u6ca1\u6709\u5904\u7406\u7a0b\u5e8f\u8981\u4f7f\u7528\u4ee5\u4e0b\u4efb\u4f55\u6ce8\u91ca: {0}

# 0: source version, 1: string, 2: string
compiler.warn.proc.processor.incompatible.source.version=\u6765\u81ea\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f ''{1}'' \u7684\u53d7\u652f\u6301 source \u7248\u672c ''{0}'' \u4f4e\u4e8e -source ''{2}''

compiler.warn.proc.proc-only.requested.no.procs=\u5728\u672a\u8bf7\u6c42\u7f16\u8bd1\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6ce8\u91ca\u5904\u7406, \u4f46\u627e\u4e0d\u5230\u5904\u7406\u7a0b\u5e8f\u3002

compiler.warn.proc.use.implicit=\u6ce8\u91ca\u5904\u7406\u4e0d\u9002\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u6587\u4ef6\u3002\n\u4f7f\u7528 -implicit \u6307\u5b9a\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u7b56\u7565\u3002

compiler.warn.proc.use.proc.or.implicit=\u6ce8\u91ca\u5904\u7406\u4e0d\u9002\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u6587\u4ef6\u3002\n\u4f7f\u7528 -proc:none \u7981\u7528\u6ce8\u91ca\u5904\u7406\u6216\u4f7f\u7528 -implicit \u6307\u5b9a\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u7b56\u7565\u3002

# Print a client-generated warning; assumed to be localized, no translation required
# 0: string
compiler.warn.proc.messager={0}

# 0: set of name
compiler.warn.proc.unclosed.type.files=\u7c7b\u578b ''{0}'' \u7684\u6587\u4ef6\u672a\u5173\u95ed; \u5c06\u4e0d\u9488\u5bf9\u8fd9\u4e9b\u7c7b\u578b\u8fdb\u884c\u6ce8\u91ca\u5904\u7406

# 0: string
compiler.warn.proc.unmatched.processor.options=\u4ee5\u4e0b\u9009\u9879\u672a\u88ab\u4efb\u4f55\u5904\u7406\u7a0b\u5e8f\u8bc6\u522b: ''{0}''

compiler.warn.try.explicit.close.call=\u5728\u53ef\u81ea\u52a8\u7ed3\u675f\u7684\u8d44\u6e90\u4e0a\u663e\u5f0f\u8c03\u7528 close()

# 0: symbol
compiler.warn.try.resource.not.referenced=\u4e0d\u80fd\u5728\u76f8\u5e94\u7684 try \u8bed\u53e5\u7684\u6b63\u6587\u4e2d\u5f15\u7528\u53ef\u81ea\u52a8\u7ed3\u675f\u7684\u8d44\u6e90{0}

# 0: type
compiler.warn.try.resource.throws.interrupted.exc=\u53ef\u81ea\u52a8\u5173\u95ed\u7684\u8d44\u6e90{0}\u5305\u542b\u7684\u6210\u5458\u65b9\u6cd5 close() \u53ef\u80fd\u629b\u51fa InterruptedException

compiler.warn.unchecked.assign=\u672a\u7ecf\u68c0\u67e5\u7684\u5206\u914d: \u5c06{0}\u5206\u914d\u7ed9{1}

# 0: symbol, 1: type
compiler.warn.unchecked.assign.to.var=\u5bf9\u4f5c\u4e3a\u539f\u59cb\u7c7b\u578b{1}\u7684\u6210\u5458\u7684\u53d8\u91cf{0}\u7684\u5206\u914d\u672a\u7ecf\u8fc7\u68c0\u67e5

# 0: symbol, 1: type
compiler.warn.unchecked.call.mbr.of.raw.type=\u5bf9\u4f5c\u4e3a\u539f\u59cb\u7c7b\u578b{1}\u7684\u6210\u5458\u7684{0}\u7684\u8c03\u7528\u672a\u7ecf\u8fc7\u68c0\u67e5

compiler.warn.unchecked.cast.to.type=\u5411\u7c7b\u578b{0}\u7684\u8f6c\u6362\u672a\u7ecf\u8fc7\u68c0\u67e5

# 0: symbol kind, 1: name, 2: list of type, 3: list of type, 4: symbol kind, 5: symbol
compiler.warn.unchecked.meth.invocation.applied=\u65b9\u6cd5\u8c03\u7528\u672a\u7ecf\u8fc7\u68c0\u67e5: \u5c06{4} {5}\u4e2d\u7684{0} {1}\u5e94\u7528\u5230\u7ed9\u5b9a\u7684\u7c7b\u578b\n\u9700\u8981: {2}\n\u627e\u5230: {3}

# 0: type
compiler.warn.unchecked.generic.array.creation=\u5bf9\u4e8e\u7c7b\u578b\u4e3a{0}\u7684 varargs \u53c2\u6570, \u6cdb\u578b\u6570\u7ec4\u521b\u5efa\u672a\u7ecf\u8fc7\u68c0\u67e5

# 0: type
compiler.warn.unchecked.varargs.non.reifiable.type=\u53c2\u6570\u5316 vararg \u7c7b\u578b{0}\u7684\u5806\u53ef\u80fd\u5df2\u53d7\u6c61\u67d3

# 0: symbol
compiler.warn.varargs.unsafe.use.varargs.param=Varargs \u65b9\u6cd5\u53ef\u80fd\u5bfc\u81f4\u6765\u81ea\u4e0d\u53ef\u5177\u4f53\u5316 varargs \u53c2\u6570 {0} \u7684\u5806\u6c61\u67d3

compiler.warn.missing.deprecated.annotation=\u672a\u4f7f\u7528 @Deprecated \u5bf9\u5df2\u8fc7\u65f6\u7684\u9879\u76ee\u8fdb\u884c\u6ce8\u91ca

compiler.warn.invalid.archive.file=\u4ee5\u4e0b\u8def\u5f84\u4e2d\u5b58\u5728\u610f\u5916\u7684\u6587\u4ef6: {0}

compiler.warn.unexpected.archive.file=\u4ee5\u4e0b\u6863\u6848\u6587\u4ef6\u5b58\u5728\u610f\u5916\u7684\u6269\u5c55\u540d: {0}

compiler.warn.div.zero=\u9664\u6570\u5c31\u548c\u4f60\u62bd\u5361\u7684\u51fa\u8d27\u7387\u4e00\u6837\u5462\uff5e

compiler.warn.empty.if=if \u4e4b\u540e\u6ca1\u6709\u8bed\u53e5: \u624d\u4e00\u534a\u5c31\u4e0d\u884c\u4e86\u5417(\u00b4\uff65\u03c9\uff65`)?

compiler.warn.annotation.method.not.found=\u65e0\u6cd5\u627e\u5230\u7c7b\u578b ''{0}'' \u7684\u6ce8\u91ca\u65b9\u6cd5 ''{1}()''

compiler.warn.annotation.method.not.found.reason=\u65e0\u6cd5\u627e\u5230\u7c7b\u578b ''{0}'' \u7684\u6ce8\u91ca\u65b9\u6cd5 ''{1}()'': {2}

# 0: symbol, 1: name
compiler.warn.unknown.enum.constant=\u672a\u77e5\u7684\u679a\u4e3e\u5e38\u91cf {1}.{2}

# 0: symbol, 1: name, 2: message segment
compiler.warn.unknown.enum.constant.reason=\u672a\u77e5\u7684\u679a\u4e3e\u5e38\u91cf {1}.{2}\n\u539f\u56e0: {3}

# 0: type, 1: type
compiler.warn.raw.class.use=\u627e\u5230\u539f\u59cb\u7c7b\u578b: {0}\n\u7f3a\u5c11\u6cdb\u578b\u7c7b{1}\u7684\u7c7b\u578b\u53c2\u6570

# 0: unused, 1: unused
compiler.warn.diamond.redundant.args=\u65b0\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u5197\u4f59\u7c7b\u578b\u53c2\u6570 (\u6539\u7528 diamond \u8fd0\u7b97\u7b26)\u3002

# 0: type, 1: type
compiler.warn.diamond.redundant.args.1=\u65b0\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u5197\u4f59\u7c7b\u578b\u53c2\u6570 (\u6539\u7528 diamond \u8fd0\u7b97\u7b26)\u3002\n\u663e\u5f0f: {0}\n\u63a8\u65ad: {1}

# 0: symbol, 1: message segment
compiler.warn.varargs.redundant.trustme.anno=\u5197\u4f59\u7684 {0} \u6ce8\u91ca\u3002{1}

# 0: symbol
compiler.warn.access.to.sensitive.member.from.serializable.element=\u53ef\u4e32\u884c\u5316\u5143\u7d20\u5bf9\u654f\u611f\u6210\u5458 {0} \u7684\u8bbf\u95ee\u53ef\u4ee5\u7531\u4e0d\u53d7\u4fe1\u4efb\u7684\u4ee3\u7801\u516c\u5f00\u6267\u884c

#####

## The following are tokens which are non-terminals in the language. They should
## be named as JLS3 calls them when translated to the appropriate language.
compiler.misc.token.identifier=<\u6807\u8bc6\u7b26>

compiler.misc.token.character=<\u5b57\u7b26>

compiler.misc.token.string=<\u5b57\u7b26\u4e32>

compiler.misc.token.integer=<\u6574\u578b>

compiler.misc.token.long-integer=<\u957f\u6574\u578b>

compiler.misc.token.float=<\u6d6e\u70b9\u578b>

compiler.misc.token.double=<\u53cc\u7cbe\u5ea6\u578b>

compiler.misc.token.bad-symbol=<\u9519\u8bef\u7b26\u53f7>

compiler.misc.token.end-of-input=<\u8f93\u5165\u7ed3\u675f>

## The argument to the following string will always be one of the following:
## 1. one of the above non-terminals
## 2. a keyword (JLS1.8)
## 3. a boolean literal (JLS3.10.3)
## 4. the null literal (JLS3.10.7)
## 5. a Java separator (JLS3.11)
## 6. an operator (JLS3.12)
##
## This is the only place these tokens will be used.
# 0: token
compiler.err.expected=\u9700\u8981{0}

# 0: token, 1: token
compiler.err.expected2=\u9700\u8981{0}\u6216{1}

# 0: token, 1: token, 2: token
compiler.err.expected3=\u9700\u8981{0}, {1}\u6216{2}

compiler.err.premature.eof=\u89e3\u6790\u65f6\u5df2\u5230\u8fbe\u6587\u4ef6\u7ed3\u5c3e

## The following are related in form, but do not easily fit the above paradigm.
compiler.err.dot.class.expected=\u9700\u8981 ''.class''

## The argument to this string will always be either 'case' or 'default'.
# 0: token
compiler.err.orphaned=\u5b64\u7acb\u7684{0}

# 0: name
compiler.misc.anonymous.class=<\u533f\u540d{0}>

# 0: name, 1: type
compiler.misc.type.captureof=capture#{0}, \u5171 {1}

compiler.misc.type.captureof.1=capture#{0}

compiler.misc.type.none=<\u65e0>

compiler.misc.unnamed.package=\u672a\u547d\u540d\u7a0b\u5e8f\u5305

#####

# 0: symbol, 1: message segment
compiler.err.cant.access=\u65e0\u6cd5\u8bbf\u95ee{0}\n{1}

# 0: file name, 1: expected CP entry type, 2: constant pool index
compiler.misc.bad.const.pool.entry={0} \u4e2d\u9519\u8bef\u7684\u5e38\u91cf\u6c60\u6761\u76ee\n\u9884\u671f\u4e3a\u7d22\u5f15 {2} \u5904\u7684 {1}

# 0: file name, 1: message segment
compiler.misc.bad.class.file.header=\u9519\u8bef\u7684\u7c7b\u6587\u4ef6: {0}\n{1}\n\u8bf7\u5220\u9664\u8be5\u6587\u4ef6\u6216\u786e\u4fdd\u8be5\u6587\u4ef6\u4f4d\u4e8e\u6b63\u786e\u7684\u7c7b\u8def\u5f84\u5b50\u76ee\u5f55\u4e2d\u3002

# 0: file name, 1: message segment
compiler.misc.bad.source.file.header=\u9519\u8bef\u7684\u6e90\u6587\u4ef6: {0}\n{1}\n\u8bf7\u5220\u9664\u8be5\u6587\u4ef6\u6216\u786e\u4fdd\u8be5\u6587\u4ef6\u4f4d\u4e8e\u6b63\u786e\u7684\u6e90\u8def\u5f84\u5b50\u76ee\u5f55\u4e2d\u3002

## The following are all possible strings for the second argument ({1}) of the
## above strings.
compiler.misc.bad.class.signature=\u9519\u8bef\u7684\u7c7b\u7b7e\u540d: {0}

#0: symbol, 1: symbol
compiler.misc.bad.enclosing.class={0}\u7684\u5c01\u95ed\u7c7b\u9519\u8bef: {1}

# 0: symbol
compiler.misc.bad.enclosing.method=\u7c7b {0} \u7684\u5c01\u95ed\u65b9\u6cd5\u5c5e\u6027\u9519\u8bef

compiler.misc.bad.runtime.invisible.param.annotations=\u9519\u8bef\u7684 RuntimeInvisibleParameterAnnotations \u5c5e\u6027: {0}

compiler.misc.bad.const.pool.tag=\u9519\u8bef\u7684\u5e38\u91cf\u6c60\u6807\u8bb0: {0}

compiler.misc.bad.const.pool.tag.at=\u9519\u8bef\u7684\u5e38\u91cf\u6c60\u6807\u8bb0: {0}, \u4f4d\u4e8e{1}

compiler.misc.bad.signature=\u9519\u8bef\u7684\u7b7e\u540d: {0}

compiler.misc.bad.type.annotation.value=\u9519\u8bef\u7684\u7c7b\u578b\u6ce8\u91ca\u76ee\u6807\u7c7b\u578b\u503c: {0}

compiler.misc.class.file.wrong.class=\u7c7b\u6587\u4ef6\u5305\u542b\u9519\u8bef\u7684\u7c7b: {0}

compiler.misc.class.file.not.found=\u627e\u4e0d\u5230{0}\u7684\u7c7b\u6587\u4ef6

# 0: classfile major version, 1: classfile minor version
compiler.misc.invalid.default.interface=\u5728 {0}.{1} \u7248\u7c7b\u6587\u4ef6\u4e2d\u627e\u5230\u9ed8\u8ba4\u65b9\u6cd5

# 0: classfile major version, 1: classfile minor version
compiler.misc.invalid.static.interface=\u5728 {0}.{1} \u7248\u7c7b\u6587\u4ef6\u4e2d\u627e\u5230\u9759\u6001\u65b9\u6cd5

# 0: name
compiler.misc.file.doesnt.contain.class=\u6587\u4ef6\u4e0d\u5305\u542b\u7c7b{0}

compiler.misc.file.does.not.contain.package=\u6587\u4ef6\u4e0d\u5305\u542b\u7a0b\u5e8f\u5305{0}

compiler.misc.illegal.start.of.class.file=\u975e\u6cd5\u7684\u7c7b\u6587\u4ef6\u5f00\u59cb

compiler.misc.unable.to.access.file=\u65e0\u6cd5\u8bbf\u95ee\u6587\u4ef6: {0}

compiler.misc.unicode.str.not.supported=\u4e0d\u652f\u6301\u7c7b\u6587\u4ef6\u4e2d\u7684 Unicode \u5b57\u7b26\u4e32

compiler.misc.undecl.type.var=\u672a\u58f0\u660e\u7684\u7c7b\u578b\u53d8\u91cf: {0}

compiler.misc.wrong.version=\u7c7b\u6587\u4ef6\u5177\u6709\u9519\u8bef\u7684\u7248\u672c {0}.{1}, \u5e94\u4e3a {2}.{3}

#####

# 0: type, 1: type or symbol
compiler.err.not.within.bounds=\u7c7b\u578b\u53c2\u6570{0}\u4e0d\u5728\u7c7b\u578b\u53d8\u91cf{1}\u7684\u8303\u56f4\u5185

## The following are all possible strings for the second argument ({1}) of the
## above string.

## none yet...

#####

# 0: message segment
compiler.err.prob.found.req=\u8fd9\u91cc\uff1f: {0}

# 0: message segment
compiler.misc.prob.found.req=\u8fd9\u91cc\uff1f: {0}

# 0: message segment, 1: type, 2: type
compiler.warn.prob.found.req={0}\n\u9700\u8981: {2}\n\u627e\u5230:    {1}

# 0: type, 1: type
compiler.misc.inconvertible.types={0}\u8fd9\u91cc\u53d8\u4e0d\u4e86\u54e6\uff01{1}

# 0: type, 1: type
compiler.misc.possible.loss.of.precision=\u4ece{0}\u8f6c\u6362\u5230{1}\u53ef\u80fd\u4f1a\u6709\u635f\u5931

compiler.misc.unchecked.assign=\u4e0d\u6df1\u5165\u7684\u67e5\u67e5\u770b\u5417\uff1f

# compiler.misc.storecheck=\
#     assignment might cause later store checks to fail
# compiler.misc.unchecked=\
#     assigned array cannot dynamically check its stores
compiler.misc.unchecked.cast.to.type=\u4e0d\u6df1\u5165\u7684\u67e5\u67e5\u770b\u5417\uff1f

# compiler.err.star.expected=\
#     ''*'' expected
# compiler.err.no.elem.type=\
#     \[\*\] cannot have a type

# 0: type
compiler.misc.try.not.applicable.to.type=try-with-resources \u4e0d\u9002\u7528\u4e8e\u53d8\u91cf\u7c7b\u578b\n({0})

#####

# 0: message segment or type, 1: message segment
compiler.err.type.found.req=\u610f\u5916\u7684\u7c7b\u578b\n\u9700\u8981: {1}\n\u627e\u5230:    {0}

## The following are all possible strings for the first argument ({0}) of the
## above string.
compiler.misc.type.req.class=\u7c7b

compiler.misc.type.req.class.array=\u7c7b\u6216\u6570\u7ec4

compiler.misc.type.req.array.or.iterable=\u6570\u7ec4\u6216 java.lang.Iterable

compiler.misc.type.req.ref=\u5f15\u7528

compiler.misc.type.req.exact=\u4e0d\u5e26\u9650\u5236\u8303\u56f4\u7684\u7c7b\u6216\u63a5\u53e3

# 0: type
compiler.misc.type.parameter=\u7c7b\u578b\u53c2\u6570{0}

#####

## The following are all possible strings for the last argument of all those
## diagnostics whose key ends in ".1"

# 0: type, 1: list of type
compiler.misc.no.unique.maximal.instance.exists=\u5bf9\u4e8e\u4e0a\u9650\u4e3a{1}\u7684\u7c7b\u578b\u53d8\u91cf{0}, \u4e0d\u5b58\u5728\u552f\u4e00\u6700\u5927\u5b9e\u4f8b

compiler.misc.no.unique.minimal.instance.exists=\u5bf9\u4e8e\u4e0b\u9650\u4e3a{1}\u7684\u7c7b\u578b\u53d8\u91cf{0}, \u4e0d\u5b58\u5728\u552f\u4e00\u6700\u5c0f\u5b9e\u4f8b

# 0: type, 1: list of type
compiler.misc.incompatible.upper.bounds=\u63a8\u8bba\u53d8\u91cf {0} \u5177\u6709\u4e0d\u517c\u5bb9\u7684\u4e0a\u9650 {1}

# 0: type, 1: list of type, 2: list of type
compiler.misc.incompatible.eq.upper.bounds=\u63a8\u8bba\u53d8\u91cf {0} \u5177\u6709\u4e0d\u517c\u5bb9\u7684\u9650\u5236\u8303\u56f4\n\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6: {1}\n\u4e0a\u9650: {2}

# 0: type, 1: list of type, 2: list of type
compiler.misc.incompatible.eq.lower.bounds=\u63a8\u8bba\u53d8\u91cf{0}\u5177\u6709\u4e0d\u517c\u5bb9\u7684\u9650\u5236\u8303\u56f4\n\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6: {1}\n\u4e0b\u9650: {2}

# 0: list of type, 1: type, 2: type
compiler.misc.infer.no.conforming.instance.exists=\u4e0d\u5b58\u5728\u7c7b\u578b\u53d8\u91cf{0}\u7684\u5b9e\u4f8b, \u4ee5\u4f7f{1}\u4e0e{2}\u4e00\u81f4

# 0: list of type, 1: message segment
compiler.misc.infer.no.conforming.assignment.exists=\u65e0\u6cd5\u63a8\u65ad\u7c7b\u578b\u53d8\u91cf {0}\n(\u53c2\u6570\u4e0d\u5339\u914d; {1})

# 0: list of type
compiler.misc.infer.arg.length.mismatch=\u65e0\u6cd5\u63a8\u65ad\u7c7b\u578b\u53d8\u91cf {0}\n(\u5b9e\u9645\u53c2\u6570\u5217\u8868\u548c\u5f62\u5f0f\u53c2\u6570\u5217\u8868\u957f\u5ea6\u4e0d\u540c)

# 0: list of type, 1: message segment
compiler.misc.infer.varargs.argument.mismatch=\u65e0\u6cd5\u63a8\u65ad\u7c7b\u578b\u53d8\u91cf {0}\n(varargs \u4e0d\u5339\u914d; {1})

# 0: type, 1: list of type
compiler.misc.inferred.do.not.conform.to.upper.bounds=\u63a8\u65ad\u7c7b\u578b\u4e0d\u7b26\u5408\u4e0a\u9650\n\u63a8\u65ad: {0}\n\u4e0a\u9650: {1}

# 0: type, 1: list of type
compiler.misc.inferred.do.not.conform.to.lower.bounds=\u63a8\u65ad\u7c7b\u578b\u4e0d\u7b26\u5408\u4e0b\u9650\n\u63a8\u65ad: {0}\n\u4e0b\u9650: {1}

# 0: type, 1: list of type
compiler.misc.inferred.do.not.conform.to.eq.bounds=\u63a8\u65ad\u7c7b\u578b\u4e0d\u7b26\u5408\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\n\u63a8\u65ad: {0}\n\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6: {1}

# 0: symbol
compiler.misc.diamond={0}<>

# 0: type
compiler.misc.diamond.non.generic=\u65e0\u6cd5\u5c06 ''<>'' \u4e0e\u975e\u6cdb\u578b\u7c7b{0}\u4e00\u8d77\u4f7f\u7528

# 0: unused
compiler.misc.diamond.and.explicit.params=\u4e0d\u53ef\u4ee5\u54e6\uff01 ''<>'' \u4e0e\u6784\u9020\u5668\u7684\u663e\u5f0f\u7c7b\u578b\u53c2\u6570\u4e00\u8d77\u4f7f\u7528

# 0: unused
compiler.misc.mref.infer.and.explicit.params=\u4e0d\u53ef\u4ee5\u54e6\uff01\u539f\u59cb\u6784\u9020\u5668\u5f15\u7528\u4e0e\u6784\u9020\u5668\u7684\u663e\u5f0f\u7c7b\u578b\u53c2\u6570\u4e00\u8d77\u4f7f\u7528

# 0: type, 1: list of type
compiler.misc.explicit.param.do.not.conform.to.bounds=\u663e\u5f0f\u7c7b\u578b\u53c2\u6570{0}\u4e0d\u7b26\u5408\u58f0\u660e\u7684\u8303\u56f4{1}

compiler.misc.arg.length.mismatch=\u5b9e\u9645\u53c2\u6570\u5217\u8868\u548c\u5f62\u5f0f\u53c2\u6570\u5217\u8868\u957f\u5ea6\u4e0d\u540c

# 0: message segment
compiler.misc.no.conforming.assignment.exists=\u53c2\u6570\u4e0d\u5339\u914d; {0}

# 0: message segment
compiler.misc.varargs.argument.mismatch=varargs \u4e0d\u5339\u914d; {0}

#####

# 0: symbol or type, 1: file name
compiler.warn.auxiliary.class.accessed.from.outside.of.its.source.file={1} \u4e2d\u7684\u8f85\u52a9\u7c7b{0}\u4e0d\u5e94\u4ece\u5176\u81ea\u8eab\u7684\u6e90\u6587\u4ef6\u4ee5\u5916\u8bbf\u95ee

## The first argument ({0}) is a "kindname".
# 0: symbol kind, 1: symbol, 2: symbol
compiler.err.abstract.cant.be.accessed.directly=\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee{2}\u4e2d\u7684\u62bd\u8c61{0} {1}

## The first argument ({0}) is a "kindname".
# 0: symbol kind, 1: symbol
compiler.err.non-static.cant.be.ref=\u65e0\u6cd5\u4ece\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u5f15\u7528\u975e\u9759\u6001 {0} {1}

# 0: symbol kind, 1: symbol
compiler.misc.non-static.cant.be.ref=\u65e0\u6cd5\u4ece\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u5f15\u7528\u975e\u9759\u6001 {0} {1}

# 0: symbol kind, 1: symbol
compiler.misc.static.method.in.unbound.lookup=\u5728\u672a\u7ed1\u5b9a\u67e5\u627e\u4e2d\u627e\u5230\u9759\u6001{0} {1}

## Both arguments ({0}, {1}) are "kindname"s.  {0} is a comma-separated list
## of kindnames (the list should be identical to that provided in source.
compiler.err.unexpected.type=\u610f\u5916\u7684\u7c7b\u578b\n\u9700\u8981: {0}\n\u627e\u5230:    {1}

compiler.err.unexpected.lambda=\u6b64\u5904\u4e0d\u5e94\u4e3a lambda \u8868\u8fbe\u5f0f

compiler.err.unexpected.mref=\u6b64\u5904\u4e0d\u5e94\u4e3a\u65b9\u6cd5\u5f15\u7528

## The first argument {0} is a "kindname" (e.g. 'constructor', 'field', etc.)
## The second argument {1} is the non-resolved symbol
## The third argument {2} is a list of type parameters (non-empty if {1} is a method)
## The fourth argument {3} is a list of argument types (non-empty if {1} is a method)
# 0: symbol kind, 1: name, 2: unused, 3: unused
compiler.err.cant.resolve=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7: {0} {1}

# 0: symbol kind, 1: name, 2: unused, 3: list of type
compiler.err.cant.resolve.args=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7: {0} {1}({3})

# 0: symbol kind, 1: name, 2: list of type, 3: list of type
compiler.err.cant.resolve.args.params=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7: {0} <{2}>{1}({3})

## arguments from {0} to {3} have the same meaning as above
## The fifth argument {4} is a location subdiagnostic (see below)
# 0: symbol kind, 1: name, 2: unused, 3: unused, 4: message segment
compiler.err.cant.resolve.location=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7:   {0} {1}\n\u4f4d\u7f6e: {4}

# 0: symbol kind, 1: name, 2: unused, 3: list of type, 4: message segment
compiler.err.cant.resolve.location.args=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7:   {0} {1}({3})\n\u4f4d\u7f6e: {4}

# 0: symbol kind, 1: name, 2: list of type, 3: list, 4: message segment
compiler.err.cant.resolve.location.args.params=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7:   {0} <{2}>{1}({3})\n\u4f4d\u7f6e: {4}

### Following are replicated/used for method reference diagnostics

# 0: symbol kind, 1: name, 2: unused, 3: list of type, 4: message segment
compiler.misc.cant.resolve.location.args=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7:   {0} {1}({3})\n\u4f4d\u7f6e: {4}

# 0: symbol kind, 1: name, 2: list of type, 3: list, 4: message segment
compiler.misc.cant.resolve.location.args.params=\u54a6\uff1f\u5c45\u7136\u8fde\u7b26\u53f7\u90fd\u627e\u4e0d\u5230\u4e86\u5440~ \u6742\u9c7c~\n\u7b26\u53f7:   {0} <{2}>{1}({3})\n\u4f4d\u7f6e: {4}

##a location subdiagnostic is composed as follows:
## The first argument {0} is the location "kindname" (e.g. 'constructor', 'field', etc.)
## The second argument {1} is the location name
## The third argument {2} is the location type (only when {1} is a variable name)

# 0: symbol kind, 1: type or symbol, 2: unused
compiler.misc.location={0} {1}

# 0: symbol kind, 1: symbol, 2: type
compiler.misc.location.1=\u7c7b\u578b\u4e3a{2}\u7684{0} {1}

## The following are all possible string for "kindname".
## They should be called whatever the JLS calls them after it been translated
## to the appropriate language.
# compiler.misc.kindname.constructor=\
#     static member
compiler.misc.kindname.annotation=@interface

compiler.misc.kindname.constructor=\u6784\u9020\u5668

compiler.misc.kindname.enum=\u679a\u4e3e

compiler.misc.kindname.interface=\u63a5\u53e3

compiler.misc.kindname.static=\u9759\u6001

compiler.misc.kindname.type.variable=\u7c7b\u578b\u53d8\u91cf

compiler.misc.kindname.type.variable.bound=\u7c7b\u578b\u53d8\u91cf\u7684\u9650\u5236\u8303\u56f4

compiler.misc.kindname.variable=\u53d8\u91cf

compiler.misc.kindname.value=\u503c

compiler.misc.kindname.method=\u65b9\u6cd5

compiler.misc.kindname.class=\u7c7b

compiler.misc.kindname.package=\u7a0b\u5e8f\u5305

compiler.misc.kindname.static.init=\u9759\u6001\u521d\u59cb\u5316\u7a0b\u5e8f

compiler.misc.kindname.instance.init=\u5b9e\u4f8b\u521d\u59cb\u5316\u7a0b\u5e8f

#####

compiler.misc.no.args=\u6ca1\u6709\u53c2\u6570

# 0: message segment
compiler.err.override.static={0}\n\u8986\u76d6\u7684\u65b9\u6cd5\u4e3a static

# 0: message segment, 1: set of modifier
compiler.err.override.meth={0}\n\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u4e3a{1}

# 0: message segment, 1: type
compiler.err.override.meth.doesnt.throw={0}\n\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u672a\u629b\u51fa{1}

# In the following string {1} is a space separated list of Java Keywords, as
# they would have been declared in the source code
# 0: message segment, 1: set of modifier
compiler.err.override.weaker.access={0}\n\u6b63\u5728\u5c1d\u8bd5\u5206\u914d\u66f4\u4f4e\u7684\u8bbf\u95ee\u6743\u9650; \u4ee5\u524d\u4e3a{1}

# 0: message segment, 1: type, 2: type
compiler.err.override.incompatible.ret={0}\n\u8fd4\u56de\u7c7b\u578b{1}\u4e0e{2}\u4e0d\u517c\u5bb9

# 0: message segment, 1: type, 2: type
compiler.warn.override.unchecked.ret={0}\n\u8fd4\u56de\u7c7b\u578b\u9700\u8981\u4ece{1}\u5230{2}\u7684\u4e0d\u6df1\u5165\u7684\u67e5\u67e5\u770b\u5417\uff1f

# 0: message segment, 1: type
compiler.warn.override.unchecked.thrown={0}\n\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u672a\u629b\u51fa{1}

# 0: symbol
compiler.warn.override.equals.but.not.hashcode=\u7c7b{0}\u8986\u76d6\u4e86 equals, \u4f46\u8be5\u7c7b\u6216\u4efb\u4f55\u8d85\u7c7b\u90fd\u672a\u8986\u76d6 hashCode \u65b9\u6cd5

## The following are all possible strings for the first argument ({0}) of the
## above strings.
# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.cant.override={1}\u4e2d\u7684{0}\u65e0\u6cd5\u8986\u76d6{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.cant.implement={1}\u4e2d\u7684{0}\u65e0\u6cd5\u5b9e\u73b0{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.clashes.with={1}\u4e2d\u7684{0}\u4e0e{3}\u4e2d\u7684{2}\u51b2\u7a81

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.unchecked.override={1}\u4e2d\u7684{0}\u8986\u76d6\u4e86{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.unchecked.implement={1}\u4e2d\u7684{0}\u5b9e\u73b0\u4e86{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.unchecked.clash.with={1}\u4e2d\u7684{0}\u8986\u76d6\u4e86{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.varargs.override={1}\u4e2d\u7684{0}\u8986\u76d6\u4e86{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.varargs.implement={1}\u4e2d\u7684{0}\u5b9e\u73b0\u4e86{3}\u4e2d\u7684{2}

# 0: symbol, 1: symbol, 2: symbol, 3: symbol
compiler.misc.varargs.clash.with={1}\u4e2d\u7684{0}\u8986\u76d6\u4e86{3}\u4e2d\u7684{2}

# 0: unused
compiler.misc.diamond.and.anon.class=\u65e0\u6cd5\u5c06 ''<>'' \u4e0e\u533f\u540d\u5185\u90e8\u7c7b\u4e00\u8d77\u4f7f\u7528

# 0: symbol kind, 1: symbol, 2: symbol, 3: message segment
compiler.misc.inapplicable.method={0} {1}.{2}\u4e0d\u9002\u7528\n({3})

########################################
# Diagnostics for language feature changes
########################################
# 0: string
compiler.err.unsupported.fp.lit=-source {0} \u4e2d\u4e0d\u652f\u6301\u5341\u516d\u8fdb\u5236\u6d6e\u70b9\u6587\u5b57\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u5341\u516d\u8fdb\u5236\u6d6e\u70b9\u6587\u5b57)

# 0: string
compiler.err.unsupported.binary.lit=-source {0} \u4e2d\u4e0d\u652f\u6301\u4e8c\u8fdb\u5236\u6587\u5b57\n(\u8bf7\u4f7f\u7528 -source 7 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u4e8c\u8fdb\u5236\u6587\u5b57)

# 0: string
compiler.err.unsupported.underscore.lit=-source {0} \u4e2d\u4e0d\u652f\u6301\u6587\u5b57\u4e2d\u5b58\u5728\u4e0b\u5212\u7ebf\n(\u8bf7\u4f7f\u7528 -source 7 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u5141\u8bb8\u6587\u5b57\u4e2d\u5b58\u5728\u4e0b\u5212\u7ebf)

# 0: string
compiler.err.try.with.resources.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301 try-with-resources\n(\u8bf7\u4f7f\u7528 -source 7 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 try-with-resources)

compiler.warn.enum.as.identifier=\u4ece\u53d1\u884c\u7248 5 \u5f00\u59cb, ''enum'' \u4e3a\u5173\u952e\u5b57, \u800c\u4e0d\u7528\u4f5c\u6807\u8bc6\u7b26\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u5c06 ''enum'' \u7528\u4f5c\u5173\u952e\u5b57)

compiler.warn.assert.as.identifier=\u4ece\u53d1\u884c\u7248 1.4 \u5f00\u59cb, ''assert'' \u662f\u4e00\u4e2a\u5173\u952e\u5b57, \u4f46\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\n(\u8bf7\u4f7f\u7528 -source 1.4 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u5c06 ''assert'' \u7528\u4f5c\u5173\u952e\u5b57)

compiler.warn.underscore.as.identifier=''_'' \u7528\u4f5c\u6807\u8bc6\u7b26\n(Java SE 8 \u4e4b\u540e\u7684\u53d1\u884c\u7248\u4e2d\u53ef\u80fd\u4e0d\u652f\u6301\u4f7f\u7528 ''_'' \u4f5c\u4e3a\u6807\u8bc6\u7b26)

compiler.err.underscore.as.identifier.in.lambda=''_'' \u7528\u4f5c\u6807\u8bc6\u7b26\n(\u5bf9\u4e8e lambda \u53c2\u6570, \u7981\u6b62\u5c06 ''_'' \u7528\u4f5c\u6807\u8bc6\u7b26)

compiler.err.enum.as.identifier=\u4ece\u53d1\u884c\u7248 5 \u5f00\u59cb, ''enum'' \u4e3a\u5173\u952e\u5b57, \u800c\u4e0d\u7528\u4f5c\u6807\u8bc6\u7b26\n(\u8bf7\u4f7f\u7528 -source 1.4 \u6216\u66f4\u4f4e\u7248\u672c\u4ee5\u5c06 ''enum'' \u7528\u4f5c\u6807\u8bc6\u7b26)

compiler.err.assert.as.identifier=\u4ece\u53d1\u884c\u7248 1.4 \u5f00\u59cb, ''assert'' \u662f\u4e00\u4e2a\u5173\u952e\u5b57, \u4f46\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\n(\u8bf7\u4f7f\u7528 -source 1.3 \u6216\u66f4\u4f4e\u7248\u672c\u4ee5\u5c06 ''assert'' \u7528\u4f5c\u6807\u8bc6\u7b26)

# TODO 308: make a better error message
compiler.err.this.as.identifier=\u4ece\u53d1\u884c\u7248 8 \u5f00\u59cb, ''this'' \u53ea\u80fd\u4f5c\u4e3a\u63a5\u6536\u65b9\u7c7b\u578b\u7684\u53c2\u6570\u540d, \u8be5\u53c2\u6570\u5fc5\u987b\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570

# 0: symbol
compiler.err.receiver.parameter.not.applicable.constructor.toplevel.class=\u63a5\u6536\u65b9\u53c2\u6570\u4e0d\u9002\u7528\u4e8e\u9876\u5c42\u7c7b\u7684\u6784\u9020\u5668

# TODO 308: make a better error message
# 0: symbol
compiler.err.cant.type.annotate.scoping.1=\u65e0\u6cd5\u4f7f\u7528 type-use \u6ce8\u91ca {0} \u6765\u6ce8\u91ca\u786e\u5b9a\u4f5c\u7528\u57df\u7ed3\u6784

# TODO 308: make a better error message
# 0: list of symbol
compiler.err.cant.type.annotate.scoping=\u65e0\u6cd5\u4f7f\u7528 type-use \u6ce8\u91ca {0} \u6765\u6ce8\u91ca\u786e\u5b9a\u4f5c\u7528\u57df\u7ed3\u6784

# 0: type, 1: type
compiler.err.incorrect.receiver.name=\u63a5\u6536\u65b9\u540d\u79f0\u4e0e\u5c01\u95ed\u7c7b\u7c7b\u578b\u4e0d\u5339\u914d\n\u9700\u8981: {0}\n\u627e\u5230: {1}

# 0: type, 1: type
compiler.err.incorrect.receiver.type=\u63a5\u6536\u65b9\u7c7b\u578b\u4e0e\u5c01\u95ed\u7c7b\u7c7b\u578b\u4e0d\u5339\u914d\n\u9700\u8981: {0}\n\u627e\u5230: {1}

# 0: type, 1: type
compiler.err.incorrect.constructor.receiver.type=\u63a5\u6536\u65b9\u7c7b\u578b\u4e0e\u5916\u90e8\u5c01\u95ed\u7c7b\u7c7b\u578b\u4e0d\u5339\u914d\n\u9700\u8981: {0}\n\u627e\u5230: {1}

# 0: type, 1: type
compiler.err.incorrect.constructor.receiver.name=\u63a5\u6536\u65b9\u540d\u79f0\u4e0e\u5916\u90e8\u5c01\u95ed\u7c7b\u7c7b\u578b\u4e0d\u5339\u914d\n\u9700\u8981: {0}\n\u627e\u5230: {1}

compiler.err.no.annotations.on.dot.class=\u7c7b\u6587\u5b57\u7c7b\u578b\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u6ce8\u91ca

# 0: string
compiler.err.generics.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u6cdb\u578b\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u6cdb\u578b)

# 0: string
compiler.err.varargs.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301 variable-arity \u65b9\u6cd5\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 variable-arity \u65b9\u6cd5)

# 0: string
compiler.err.annotations.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u6ce8\u91ca\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u6ce8\u91ca)

# 0: string
compiler.err.type.annotations.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u7c7b\u578b\u6ce8\u91ca\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u7c7b\u578b\u6ce8\u91ca)

# 0: string
compiler.err.annotations.after.type.params.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u65b9\u6cd5\u7c7b\u578b\u53c2\u6570\u540e\u7684\u6ce8\u91ca\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u65b9\u6cd5\u7c7b\u578b\u53c2\u6570\u540e\u7684\u6ce8\u91ca)

# 0: string
compiler.err.repeatable.annotations.not.supported.in.source=-source {0}\u4e2d\u4e0d\u652f\u6301\u91cd\u590d\u6ce8\u91ca\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u91cd\u590d\u6ce8\u91ca)

# 0: string
compiler.err.foreach.not.supported.in.source=-source {0}\u4e2d\u4e0d\u652f\u6301\u589e\u5f3a\u578b for \u5faa\u73af\n(\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 for-each \u5faa\u73af)

# 0: string
compiler.err.static.import.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u9759\u6001\u5bfc\u5165\u58f0\u660e\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u9759\u6001\u5bfc\u5165\u58f0\u660e)

# 0: string
compiler.err.enums.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u679a\u4e3e\n(\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u679a\u4e3e)

# 0: string
compiler.err.diamond.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301 diamond \u8fd0\u7b97\u7b26\n(\u8bf7\u4f7f\u7528 -source 7 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 diamond \u8fd0\u7b97\u7b26)

# 0: string
compiler.err.multicatch.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301 multi-catch \u8bed\u53e5\n(\u8bf7\u4f7f\u7528 -source 7 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 multi-catch \u8bed\u53e5)

# 0: string
compiler.err.string.switch.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301 switch \u4e2d\u5b58\u5728\u5b57\u7b26\u4e32\n(\u8bf7\u4f7f\u7528 -source 7 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u5141\u8bb8 switch \u4e2d\u5b58\u5728\u5b57\u7b26\u4e32)

# 0: string
compiler.err.lambda.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301 lambda \u8868\u8fbe\u5f0f\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 lambda \u8868\u8fbe\u5f0f)

# 0: string
compiler.err.method.references.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u65b9\u6cd5\u5f15\u7528\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u65b9\u6cd5\u5f15\u7528)

# 0: string
compiler.err.default.methods.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u9ed8\u8ba4\u65b9\u6cd5\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u9ed8\u8ba4\u65b9\u6cd5)

# 0: string
compiler.err.intersection.types.in.cast.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u8f6c\u6362\u4e2d\u7684\u4ea4\u53c9\u7c7b\u578b\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u9ed8\u8ba4\u65b9\u6cd5)

# 0: string
compiler.err.static.intf.methods.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u9759\u6001\u63a5\u53e3\u65b9\u6cd5\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u9759\u6001\u63a5\u53e3\u65b9\u6cd5)

# 0: string
compiler.err.static.intf.method.invoke.not.supported.in.source=-source {0} \u4e2d\u4e0d\u652f\u6301\u9759\u6001\u63a5\u53e3\u65b9\u6cd5\u8c03\u7528\n(\u8bf7\u4f7f\u7528 -source 8 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u9759\u6001\u63a5\u53e3\u65b9\u6cd5\u8c03\u7528)

########################################
# Diagnostics for verbose resolution
# used by Resolve (debug only)
########################################

# 0: number, 1: symbol, 2: unused
compiler.misc.applicable.method.found=\u627e\u5230\u7b2c {0} \u4e2a\u9002\u7528\u65b9\u6cd5: {1}

# 0: number, 1: symbol, 2: message segment
compiler.misc.applicable.method.found.1=\u627e\u5230\u7b2c {0} \u4e2a\u9002\u7528\u65b9\u6cd5: {1}\n({2})

# 0: number, 1: symbol, 2: message segment
compiler.misc.not.applicable.method.found=\u627e\u5230\u7b2c {0} \u4e2a\u4e0d\u9002\u7528\u7684\u65b9\u6cd5: {1}\n({2})

# 0: type
compiler.misc.partial.inst.sig=\u90e8\u5206\u5b9e\u4f8b\u5316\u4e3a: {0}

# 0: name, 1: symbol, 2: number, 3: MethodResolutionPhase, 4: list of type or message segment, 5: list of type or message segment
compiler.note.verbose.resolve.multi=\u5c06\u7c7b\u578b {1} \u7684\u65b9\u6cd5 {0} \u89e3\u6790\u4e3a\u5019\u9009\u9879 {2}\n\u9636\u6bb5: {3}\n\u5177\u6709\u5b9e\u9645\u503c: {4}\n\u5177\u6709\u7c7b\u578b\u53c2\u6570: {5}\n\u5019\u9009\u9879:

# 0: name, 1: symbol, 2: unused, 3: MethodResolutionPhase, 4: list of type or message segment, 5: list of type or message segment
compiler.note.verbose.resolve.multi.1=\u7c7b\u578b {1} \u7684\u65b9\u6cd5 {0} \u89e3\u6790\u9519\u8bef\n\u9636\u6bb5: {3}\n\u5177\u6709\u5b9e\u9645\u503c: {4}\n\u5177\u6709\u7c7b\u578b\u53c2\u6570: {5}\n\u5019\u9009\u9879:

# 0: symbol, 1: type, 2: type
compiler.note.deferred.method.inst=\u65b9\u6cd5 {0} \u7684\u5ef6\u8fdf\u5b9e\u4f8b\u5316\n\u5b9e\u4f8b\u5316\u7b7e\u540d: {1}\n\u76ee\u6807\u7c7b\u578b: {2}

########################################
# Diagnostics for where clause implementation
# used by the RichDiagnosticFormatter.
########################################

compiler.misc.type.null=<\u7a7a\u503c>

# X#n (where n is an int id) is disambiguated tvar name
# 0: name, 1: number
compiler.misc.type.var={0}#{1}

# CAP#n (where n is an int id) is an abbreviation for 'captured type'
# 0: number
compiler.misc.captured.type=CAP#{0}

# <INT#n> (where n is an int id) is an abbreviation for 'intersection type'
# 0: number
compiler.misc.intersection.type=INT#{0}

# where clause for captured type: contains upper ('extends {1}') and lower
# ('super {2}') bound along with the wildcard that generated this captured type ({3})
# 0: type, 1: type, 2: type, 3: type
compiler.misc.where.captured={0}\u4ece{3}\u7684\u6355\u83b7\u6269\u5c55{1} \u8d85 {2}

# compact where clause for captured type: contains upper ('extends {1}') along
# with the wildcard that generated this captured type ({3})
# 0: type, 1: type, 2: unused, 3: type
compiler.misc.where.captured.1={0}\u4ece{3}\u7684\u6355\u83b7\u6269\u5c55{1}

# where clause for type variable: contains upper bound(s) ('extends {1}') along with
# the kindname ({2}) and location ({3}) in which the typevar has been declared
# 0: type, 1: list of type, 2: symbol kind, 3: symbol
compiler.misc.where.typevar={0}\u6269\u5c55\u5df2\u5728{2} {3}\u4e2d\u58f0\u660e\u7684{1}

# compact where clause for type variable: contains the kindname ({2}) and location ({3})
# in which the typevar has been declared
# 0: type, 1: list of type, 2: symbol kind, 3: symbol
compiler.misc.where.typevar.1={0}\u5df2\u5728{2} {3}\u4e2d\u58f0\u660e

# where clause for fresh type variable: contains upper bound(s) ('extends {1}').
# Since a fresh type-variable is synthetic - there's no location/kindname here.
# 0: type, 1: list of type
compiler.misc.where.fresh.typevar={0}\u6269\u5c55{1}

# where clause for type variable: contains all the upper bound(s) ('extends {1}')
# of this intersection type
# 0: type, 1: list of type
compiler.misc.where.intersection={0}\u6269\u5c55{1}

### Where clause headers ###
compiler.misc.where.description.captured=\u5176\u4e2d, {0}\u662f\u65b0\u7c7b\u578b\u53d8\u91cf:

# 0: set of type
compiler.misc.where.description.typevar=\u5176\u4e2d, {0}\u662f\u7c7b\u578b\u53d8\u91cf:

# 0: set of type
compiler.misc.where.description.intersection=\u5176\u4e2d, {0}\u662f\u4ea4\u53c9\u7c7b\u578b:

# 0: set of type
compiler.misc.where.description.captured.1=\u5176\u4e2d, {0}\u662f\u65b0\u7c7b\u578b\u53d8\u91cf:

# 0: set of type
compiler.misc.where.description.typevar.1=\u5176\u4e2d, {0}\u662f\u7c7b\u578b\u53d8\u91cf:

compiler.misc.where.description.intersection.1=\u5176\u4e2d, {0}\u662f\u4ea4\u53c9\u7c7b\u578b:

###
# errors related to doc comments

compiler.err.dc.bad.entity=HTML \u5b9e\u4f53\u9519\u8bef

compiler.err.dc.bad.gt=''>'' \u7684\u7528\u6cd5\u9519\u8bef

compiler.err.dc.bad.inline.tag=\u5185\u5d4c\u6807\u8bb0\u7684\u7528\u6cd5\u4e0d\u6b63\u786e

compiler.err.dc.identifier.expected=\u9700\u8981\u6807\u8bc6\u7b26

compiler.err.dc.malformed.html=\u683c\u5f0f\u9519\u8bef\u7684 HTML

compiler.err.dc.missing.semicolon=\u7f3a\u5c11\u5206\u53f7

compiler.err.dc.no.content=\u65e0\u5185\u5bb9

compiler.err.dc.no.tag.name='@' \u540e\u6ca1\u6709\u6807\u8bb0\u540d

compiler.err.dc.gt.expected=\u9700\u8981 ''>''

compiler.err.dc.ref.bad.parens=\u5f15\u7528\u4e2d\u7f3a\u5c11 '')''

compiler.err.dc.ref.syntax.error=\u5f15\u7528\u4e2d\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef

compiler.err.dc.ref.unexpected.input=\u610f\u5916\u7684\u6587\u672c

compiler.err.dc.unexpected.content=\u610f\u5916\u7684\u5185\u5bb9

compiler.err.dc.unterminated.inline.tag=\u672a\u7ec8\u6b62\u7684\u5185\u5d4c\u6807\u8bb0

compiler.err.dc.unterminated.signature=\u672a\u7ec8\u6b62\u7684\u7b7e\u540d

compiler.err.dc.unterminated.string=\u672a\u7ec8\u6b62\u7684\u5b57\u7b26\u4e32


